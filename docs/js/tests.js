(()=>{var Te=Object.create;var ne=Object.defineProperty;var Le=Object.getOwnPropertyDescriptor;var Oe=Object.getOwnPropertyNames;var Fe=Object.getPrototypeOf,Me=Object.prototype.hasOwnProperty;var h=(n,e)=>ne(n,"name",{value:e,configurable:!0});var q=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var _e=(n,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of Oe(e))!Me.call(n,r)&&r!==t&&ne(n,r,{get:()=>e[r],enumerable:!(o=Le(e,r))||o.enumerable});return n};var He=(n,e,t)=>(t=n!=null?Te(Fe(n)):{},_e(e||!n||!n.__esModule?ne(t,"default",{value:n,enumerable:!0}):t,n));var fe=q((qt,ge)=>{"use strict";ge.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}});var ie=q((Xt,ye)=>{var R=fe(),we={};for(let n of Object.keys(R))we[R[n]]=n;var b={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};ye.exports=b;for(let n of Object.keys(b)){if(!("channels"in b[n]))throw new Error("missing channels property: "+n);if(!("labels"in b[n]))throw new Error("missing channel labels property: "+n);if(b[n].labels.length!==b[n].channels)throw new Error("channel and label counts mismatch: "+n);let{channels:e,labels:t}=b[n];delete b[n].channels,delete b[n].labels,Object.defineProperty(b[n],"channels",{value:e}),Object.defineProperty(b[n],"labels",{value:t})}b.rgb.hsl=function(n){let e=n[0]/255,t=n[1]/255,o=n[2]/255,r=Math.min(e,t,o),s=Math.max(e,t,o),i=s-r,a,l;s===r?a=0:e===s?a=(t-o)/i:t===s?a=2+(o-e)/i:o===s&&(a=4+(e-t)/i),a=Math.min(a*60,360),a<0&&(a+=360);let c=(r+s)/2;return s===r?l=0:c<=.5?l=i/(s+r):l=i/(2-s-r),[a,l*100,c*100]};b.rgb.hsv=function(n){let e,t,o,r,s,i=n[0]/255,a=n[1]/255,l=n[2]/255,c=Math.max(i,a,l),d=c-Math.min(i,a,l),u=h(function(m){return(c-m)/6/d+1/2},"diffc");return d===0?(r=0,s=0):(s=d/c,e=u(i),t=u(a),o=u(l),i===c?r=o-t:a===c?r=1/3+e-o:l===c&&(r=2/3+t-e),r<0?r+=1:r>1&&(r-=1)),[r*360,s*100,c*100]};b.rgb.hwb=function(n){let e=n[0],t=n[1],o=n[2],r=b.rgb.hsl(n)[0],s=1/255*Math.min(e,Math.min(t,o));return o=1-1/255*Math.max(e,Math.max(t,o)),[r,s*100,o*100]};b.rgb.cmyk=function(n){let e=n[0]/255,t=n[1]/255,o=n[2]/255,r=Math.min(1-e,1-t,1-o),s=(1-e-r)/(1-r)||0,i=(1-t-r)/(1-r)||0,a=(1-o-r)/(1-r)||0;return[s*100,i*100,a*100,r*100]};function Ie(n,e){return(n[0]-e[0])**2+(n[1]-e[1])**2+(n[2]-e[2])**2}h(Ie,"comparativeDistance");b.rgb.keyword=function(n){let e=we[n];if(e)return e;let t=1/0,o;for(let r of Object.keys(R)){let s=R[r],i=Ie(n,s);i<t&&(t=i,o=r)}return o};b.keyword.rgb=function(n){return R[n]};b.rgb.xyz=function(n){let e=n[0]/255,t=n[1]/255,o=n[2]/255;e=e>.04045?((e+.055)/1.055)**2.4:e/12.92,t=t>.04045?((t+.055)/1.055)**2.4:t/12.92,o=o>.04045?((o+.055)/1.055)**2.4:o/12.92;let r=e*.4124+t*.3576+o*.1805,s=e*.2126+t*.7152+o*.0722,i=e*.0193+t*.1192+o*.9505;return[r*100,s*100,i*100]};b.rgb.lab=function(n){let e=b.rgb.xyz(n),t=e[0],o=e[1],r=e[2];t/=95.047,o/=100,r/=108.883,t=t>.008856?t**(1/3):7.787*t+16/116,o=o>.008856?o**(1/3):7.787*o+16/116,r=r>.008856?r**(1/3):7.787*r+16/116;let s=116*o-16,i=500*(t-o),a=200*(o-r);return[s,i,a]};b.hsl.rgb=function(n){let e=n[0]/360,t=n[1]/100,o=n[2]/100,r,s,i;if(t===0)return i=o*255,[i,i,i];o<.5?r=o*(1+t):r=o+t-o*t;let a=2*o-r,l=[0,0,0];for(let c=0;c<3;c++)s=e+1/3*-(c-1),s<0&&s++,s>1&&s--,6*s<1?i=a+(r-a)*6*s:2*s<1?i=r:3*s<2?i=a+(r-a)*(2/3-s)*6:i=a,l[c]=i*255;return l};b.hsl.hsv=function(n){let e=n[0],t=n[1]/100,o=n[2]/100,r=t,s=Math.max(o,.01);o*=2,t*=o<=1?o:2-o,r*=s<=1?s:2-s;let i=(o+t)/2,a=o===0?2*r/(s+r):2*t/(o+t);return[e,a*100,i*100]};b.hsv.rgb=function(n){let e=n[0]/60,t=n[1]/100,o=n[2]/100,r=Math.floor(e)%6,s=e-Math.floor(e),i=255*o*(1-t),a=255*o*(1-t*s),l=255*o*(1-t*(1-s));switch(o*=255,r){case 0:return[o,l,i];case 1:return[a,o,i];case 2:return[i,o,l];case 3:return[i,a,o];case 4:return[l,i,o];case 5:return[o,i,a]}};b.hsv.hsl=function(n){let e=n[0],t=n[1]/100,o=n[2]/100,r=Math.max(o,.01),s,i;i=(2-t)*o;let a=(2-t)*r;return s=t*r,s/=a<=1?a:2-a,s=s||0,i/=2,[e,s*100,i*100]};b.hwb.rgb=function(n){let e=n[0]/360,t=n[1]/100,o=n[2]/100,r=t+o,s;r>1&&(t/=r,o/=r);let i=Math.floor(6*e),a=1-o;s=6*e-i,i&1&&(s=1-s);let l=t+s*(a-t),c,d,u;switch(i){default:case 6:case 0:c=a,d=l,u=t;break;case 1:c=l,d=a,u=t;break;case 2:c=t,d=a,u=l;break;case 3:c=t,d=l,u=a;break;case 4:c=l,d=t,u=a;break;case 5:c=a,d=t,u=l;break}return[c*255,d*255,u*255]};b.cmyk.rgb=function(n){let e=n[0]/100,t=n[1]/100,o=n[2]/100,r=n[3]/100,s=1-Math.min(1,e*(1-r)+r),i=1-Math.min(1,t*(1-r)+r),a=1-Math.min(1,o*(1-r)+r);return[s*255,i*255,a*255]};b.xyz.rgb=function(n){let e=n[0]/100,t=n[1]/100,o=n[2]/100,r,s,i;return r=e*3.2406+t*-1.5372+o*-.4986,s=e*-.9689+t*1.8758+o*.0415,i=e*.0557+t*-.204+o*1.057,r=r>.0031308?1.055*r**(1/2.4)-.055:r*12.92,s=s>.0031308?1.055*s**(1/2.4)-.055:s*12.92,i=i>.0031308?1.055*i**(1/2.4)-.055:i*12.92,r=Math.min(Math.max(0,r),1),s=Math.min(Math.max(0,s),1),i=Math.min(Math.max(0,i),1),[r*255,s*255,i*255]};b.xyz.lab=function(n){let e=n[0],t=n[1],o=n[2];e/=95.047,t/=100,o/=108.883,e=e>.008856?e**(1/3):7.787*e+16/116,t=t>.008856?t**(1/3):7.787*t+16/116,o=o>.008856?o**(1/3):7.787*o+16/116;let r=116*t-16,s=500*(e-t),i=200*(t-o);return[r,s,i]};b.lab.xyz=function(n){let e=n[0],t=n[1],o=n[2],r,s,i;s=(e+16)/116,r=t/500+s,i=s-o/200;let a=s**3,l=r**3,c=i**3;return s=a>.008856?a:(s-16/116)/7.787,r=l>.008856?l:(r-16/116)/7.787,i=c>.008856?c:(i-16/116)/7.787,r*=95.047,s*=100,i*=108.883,[r,s,i]};b.lab.lch=function(n){let e=n[0],t=n[1],o=n[2],r;r=Math.atan2(o,t)*360/2/Math.PI,r<0&&(r+=360);let i=Math.sqrt(t*t+o*o);return[e,i,r]};b.lch.lab=function(n){let e=n[0],t=n[1],r=n[2]/360*2*Math.PI,s=t*Math.cos(r),i=t*Math.sin(r);return[e,s,i]};b.rgb.ansi16=function(n,e=null){let[t,o,r]=n,s=e===null?b.rgb.hsv(n)[2]:e;if(s=Math.round(s/50),s===0)return 30;let i=30+(Math.round(r/255)<<2|Math.round(o/255)<<1|Math.round(t/255));return s===2&&(i+=60),i};b.hsv.ansi16=function(n){return b.rgb.ansi16(b.hsv.rgb(n),n[2])};b.rgb.ansi256=function(n){let e=n[0],t=n[1],o=n[2];return e===t&&t===o?e<8?16:e>248?231:Math.round((e-8)/247*24)+232:16+36*Math.round(e/255*5)+6*Math.round(t/255*5)+Math.round(o/255*5)};b.ansi16.rgb=function(n){let e=n%10;if(e===0||e===7)return n>50&&(e+=3.5),e=e/10.5*255,[e,e,e];let t=(~~(n>50)+1)*.5,o=(e&1)*t*255,r=(e>>1&1)*t*255,s=(e>>2&1)*t*255;return[o,r,s]};b.ansi256.rgb=function(n){if(n>=232){let s=(n-232)*10+8;return[s,s,s]}n-=16;let e,t=Math.floor(n/36)/5*255,o=Math.floor((e=n%36)/6)/5*255,r=e%6/5*255;return[t,o,r]};b.rgb.hex=function(n){let t=(((Math.round(n[0])&255)<<16)+((Math.round(n[1])&255)<<8)+(Math.round(n[2])&255)).toString(16).toUpperCase();return"000000".substring(t.length)+t};b.hex.rgb=function(n){let e=n.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!e)return[0,0,0];let t=e[0];e[0].length===3&&(t=t.split("").map(a=>a+a).join(""));let o=parseInt(t,16),r=o>>16&255,s=o>>8&255,i=o&255;return[r,s,i]};b.rgb.hcg=function(n){let e=n[0]/255,t=n[1]/255,o=n[2]/255,r=Math.max(Math.max(e,t),o),s=Math.min(Math.min(e,t),o),i=r-s,a,l;return i<1?a=s/(1-i):a=0,i<=0?l=0:r===e?l=(t-o)/i%6:r===t?l=2+(o-e)/i:l=4+(e-t)/i,l/=6,l%=1,[l*360,i*100,a*100]};b.hsl.hcg=function(n){let e=n[1]/100,t=n[2]/100,o=t<.5?2*e*t:2*e*(1-t),r=0;return o<1&&(r=(t-.5*o)/(1-o)),[n[0],o*100,r*100]};b.hsv.hcg=function(n){let e=n[1]/100,t=n[2]/100,o=e*t,r=0;return o<1&&(r=(t-o)/(1-o)),[n[0],o*100,r*100]};b.hcg.rgb=function(n){let e=n[0]/360,t=n[1]/100,o=n[2]/100;if(t===0)return[o*255,o*255,o*255];let r=[0,0,0],s=e%1*6,i=s%1,a=1-i,l=0;switch(Math.floor(s)){case 0:r[0]=1,r[1]=i,r[2]=0;break;case 1:r[0]=a,r[1]=1,r[2]=0;break;case 2:r[0]=0,r[1]=1,r[2]=i;break;case 3:r[0]=0,r[1]=a,r[2]=1;break;case 4:r[0]=i,r[1]=0,r[2]=1;break;default:r[0]=1,r[1]=0,r[2]=a}return l=(1-t)*o,[(t*r[0]+l)*255,(t*r[1]+l)*255,(t*r[2]+l)*255]};b.hcg.hsv=function(n){let e=n[1]/100,t=n[2]/100,o=e+t*(1-e),r=0;return o>0&&(r=e/o),[n[0],r*100,o*100]};b.hcg.hsl=function(n){let e=n[1]/100,o=n[2]/100*(1-e)+.5*e,r=0;return o>0&&o<.5?r=e/(2*o):o>=.5&&o<1&&(r=e/(2*(1-o))),[n[0],r*100,o*100]};b.hcg.hwb=function(n){let e=n[1]/100,t=n[2]/100,o=e+t*(1-e);return[n[0],(o-e)*100,(1-o)*100]};b.hwb.hcg=function(n){let e=n[1]/100,o=1-n[2]/100,r=o-e,s=0;return r<1&&(s=(o-r)/(1-r)),[n[0],r*100,s*100]};b.apple.rgb=function(n){return[n[0]/65535*255,n[1]/65535*255,n[2]/65535*255]};b.rgb.apple=function(n){return[n[0]/255*65535,n[1]/255*65535,n[2]/255*65535]};b.gray.rgb=function(n){return[n[0]/100*255,n[0]/100*255,n[0]/100*255]};b.gray.hsl=function(n){return[0,0,n[0]]};b.gray.hsv=b.gray.hsl;b.gray.hwb=function(n){return[0,100,n[0]]};b.gray.cmyk=function(n){return[0,0,0,n[0]]};b.gray.lab=function(n){return[n[0],0,0]};b.gray.hex=function(n){let e=Math.round(n[0]/100*255)&255,o=((e<<16)+(e<<8)+e).toString(16).toUpperCase();return"000000".substring(o.length)+o};b.rgb.gray=function(n){return[(n[0]+n[1]+n[2])/3/255*100]}});var xe=q((Wt,Ce)=>{var X=ie();function De(){let n={},e=Object.keys(X);for(let t=e.length,o=0;o<t;o++)n[e[o]]={distance:-1,parent:null};return n}h(De,"buildGraph");function Re(n){let e=De(),t=[n];for(e[n].distance=0;t.length;){let o=t.pop(),r=Object.keys(X[o]);for(let s=r.length,i=0;i<s;i++){let a=r[i],l=e[a];l.distance===-1&&(l.distance=e[o].distance+1,l.parent=o,t.unshift(a))}}return e}h(Re,"deriveBFS");function Ue(n,e){return function(t){return e(n(t))}}h(Ue,"link");function Be(n,e){let t=[e[n].parent,n],o=X[e[n].parent][n],r=e[n].parent;for(;e[r].parent;)t.unshift(e[r].parent),o=Ue(X[e[r].parent][r],o),r=e[r].parent;return o.conversion=t,o}h(Be,"wrapConversion");Ce.exports=function(n){let e=Re(n),t={},o=Object.keys(e);for(let r=o.length,s=0;s<r;s++){let i=o[s];e[i].parent!==null&&(t[i]=Be(i,e))}return t}});var Se=q((Jt,ke)=>{var se=ie(),$e=xe(),L={},Pe=Object.keys(se);function je(n){let e=h(function(...t){let o=t[0];return o==null?o:(o.length>1&&(t=o),n(t))},"wrappedFn");return"conversion"in n&&(e.conversion=n.conversion),e}h(je,"wrapRaw");function ze(n){let e=h(function(...t){let o=t[0];if(o==null)return o;o.length>1&&(t=o);let r=n(t);if(typeof r=="object")for(let s=r.length,i=0;i<s;i++)r[i]=Math.round(r[i]);return r},"wrappedFn");return"conversion"in n&&(e.conversion=n.conversion),e}h(ze,"wrapRounded");Pe.forEach(n=>{L[n]={},Object.defineProperty(L[n],"channels",{value:se[n].channels}),Object.defineProperty(L[n],"labels",{value:se[n].labels});let e=$e(n);Object.keys(e).forEach(o=>{let r=e[o];L[n][o]=ze(r),L[n][o].raw=je(r)})});ke.exports=L});var _=testCases={};var k=class extends Error{static{h(this,"TestFailure")}};var E=class extends Error{static{h(this,"ConfidenceCheckFailed")}};var S=class{static{h(this,"TestResult")}constructor(e,t,o=null,r=null){this.test=e,this.numAssertions=t,this.errorOrFailure=o,this.errorOrFailureContext=r}get passed(){return!this.errorOrFailure}get failed(){return this.errorOrFailure instanceof k}get confidenceCheckFailed(){return this.errorOrFailure instanceof E}get errored(){return!this.passed&&!this.failed}get errorMessage(){return this.errorOrFailure?this.errorOrFailureContext?this.errorOrFailure.message+` (CONTEXT: ${this.errorOrFailureContext})`:this.errorOrFailure.message:this.errorOrFailureContext?this.errorOrFailureContext:"NO ERROR MESSSAGE"}};var H=class n extends HTMLElement{static{h(this,"TestCaseComponent")}static observedAttributes=["force-open"];static runTestCase(e,t){let o=_[e];return o?o.run(t):[new S({description:"locating the test"},0,`No test case with id ${e}`)]}attributeChangedCallback(e,t,o){e=="force-open"&&(this.forceOpen=o=="")}connectedCallback(){let e=this.querySelector("g-test-case-subject"),t=this.querySelector("details");if(e&&this.id){let o=this.querySelector("p"),r=o?o.textContent.trim():this.id,s=this.constructor.runTestCase(this.id,e).map(i=>i.passed?["PASS",i.numAssertions,i.test.description,null,null]:[i.failed?"FAIL":i.confidenceCheckFailed?"CONFIDENCE CHECK FAILED":"ERROR",i.numAssertions,i.test.description,i.test.errorMessage,i.errorOrFailure]);s.some(i=>i[0]!="PASS")?(console.group(r),t&&t.setAttribute("open",!0)):(console.groupCollapsed(r),t&&t.removeAttribute("open")),t&&this.forceOpen&&t.setAttribute("open",!0),s.forEach(([i,a,l,c,d])=>{console.log("[%c%s] %c%s (%d assertions)%s  %o",i=="PASS"?"color: green;":"color: red; font-weight: bold",i,"color: black; font-weight: normal",l,a,c?` ${c}`:"",d)}),console.groupEnd()}}static tagName="g-test-case";static define(){customElements.define(this.tagName,n)}};var oe=class n{static{h(this,"TypeOf")}constructor(e){this.typeName=typeof e,e===null&&(this.typeName="null");try{typeof e=="function"&&e.name?this.typeName=e.name:e&&e.constructor&&e.constructor.name&&(this.typeName=e.constructor.name)}catch(t){console.error(t)}}toString(){return this.typeName}static asString(e){return new n(e).toString()}},re=oe;var I=class{static{h(this,"Test")}constructor(e,t){this.description=e,this.testCode=t}};var me=assert=h((n,e)=>{if(!n)throw new k(e)},"assert");var pe=assertNotEqual=h((n,e,t)=>{if(n!=e)return;let o=`${t}
Didn't expected '${n}'
to equal     '${e}'`;throw new k(o)},"assertNotEqual");var ve=assertEqual=h((n,e,t)=>{if(n==e)return;let o=`${t}
Expected '${n}' (type: ${re.asString(n)})
but got   '${e}' (type: ${re.asString(e)})`;throw new k(o)},"assertEqual");var D=class{static{h(this,"TestCase")}constructor(e,t){this.id=e,this.testCaseCode=t}run(e){let t=[],o=[],r=[],s=h(v=>{t.push(v)},"captureSetup"),i=h(v=>{o.push(v)},"captureTeardown"),a=h(v=>{r.push(v)},"captureConfidenceCheck"),l=[],c=h((v,g)=>{l.push(new I(v,g))},"captureTest"),d=0,u=h(v=>(...g)=>(d=d+1,v(...g)),"capturingAssert");this.testCaseCode({setup:s,teardown:i,test:c,subject:e,assert:u(me),assertEqual:u(ve),assertNotEqual:u(pe),confidenceCheck:a});let m=[],f=h((v,g,w)=>{if(!v)throw`Required element not found: ${g}${w?"HTML: "+w.outerHTML:""}`;return v},"require"),C=h((v,g)=>{let w=f(v,g).cloneNode(!0);return w.dataset.testCaseId=this.id,w},"clone");return l.forEach(v=>{d=0;try{let g={};t.forEach(w=>{g={...w({subject:e,require:f,clone:C,...g}),...g}});try{try{r.forEach(w=>{w(g)})}catch(w){throw new E(w)}v.testCode(g),m.push(new S(v,d))}catch(w){m.push(new S(v,d,w))}try{o.forEach(w=>{w(g)})}catch(w){m.push(new S(v,d,w,"from teardown()"))}}catch(g){m.push(new S(v,d,g,"from setup()"))}}),m.length==0&&m.push(new S({description:""},0,"No tests")),m}};var p=h((n,e)=>{if(_[n])throw`There is already a test with id '${n}'`;_[n]=new D(n,e)},"testCase");var B=He(Se());var U=class extends Error{static{h(this,"NotValidHexCode")}constructor(e){super(`'${e}' is not a vaid hex code`)}};var ae=class n{static{h(this,"Color")}static HEX_REGEXP=new RegExp("^(#)?([a-fA-F0-9]{6})$");static fromHexCode(e,{onError:t="throw"}={}){if(e)try{return new n(e)}catch(o){if(o instanceof Error&&t=="return")return null;throw o}else return null}static fromHSL(e,t,o){return new n(B.default.hsl.hex(e,t,o))}static fromRGB(e,t,o){return new n(B.default.rgb.hex(parseInt(e),parseInt(t),parseInt(o)))}static random(){return n.fromRGB(Math.floor(Math.random()*256),Math.floor(Math.random()*256),Math.floor(Math.random()*256))}constructor(e){if(!e)throw new TypeError("Color must be given a hex code");let t=e.match(n.HEX_REGEXP);if(!t)throw new U(e);let[o,r,s]=t;this.hex=`#${s}`.toUpperCase()}luminance(){let[e,t,o]=B.default.hex.rgb(this.hex),r=e/255,s=t/255,i=o/255,a=r<.04045?r/12.92:Math.pow((r+.055)/1.055,2.4),l=s<.04045?s/12.92:Math.pow((s+.055)/1.055,2.4),c=i<.04045?i/12.92:Math.pow((i+.055)/1.055,2.4);return .2126*a+.7152*l+.0722*c}contrast(e){let t=this.luminance(),o=e.luminance();if(t<o){let r=t;t=o,o=r}return(t+.05)/(o+.05)}hsl(){return B.default.hex.hsl.raw(this.hex)}hexCode(){return this.hex}},N=ae;var le=h(({subject:n,clone:e,require:t})=>{let o=e(n.children[0],"children[0]"),r=e(n.children[1],"children[1]"),s=t(o.querySelector("input[type=color]"),"derived input"),i=t(o.querySelector("label code"),"derived label's code"),a=o.querySelector("[data-link-context]");return document.body.appendChild(r),document.body.appendChild(o),r.id=`test-case-${r.id}`,o.id=`test-case-${o.id}`,o.setAttribute("derived-from",r.id),{$derivedInput:s,$derivedLabel:i,$main:r,$derived:o,$derivedLinkContext:a}},"singleDerivedSetup"),ce=h(({$main:n,$derived:e})=>{document.body.removeChild(n),document.body.removeChild(e)},"singleDerivedTeardown");p("derived-brighter-linear",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(le),e(ce),t("manipulating the main causes the others to derive values",({$main:i,$derived:a,$derivedInput:l,$derivedLabel:c})=>{i.setAttribute("hex-code","#453888"),s("#998ed1",l.value.toLowerCase(),"Value should be derived via brightness algorithm"),s("#998ed1",c.textContent.toLowerCase(),"Value should be derived via brightness algorithm")})});p("derived-darker-linear",({setup:n,teardown:e,test:t,assert:o,assertEqual:r})=>{n(le),e(ce),t("manipulating the main causes the others to derive values",({$main:s,$derived:i,$derivedInput:a,$derivedLabel:l})=>{s.setAttribute("hex-code","#888555"),r("#44432b",a.value.toLowerCase(),"Value should be derived via brightness algorithm"),r("#44432b",l.textContent.toLowerCase(),"Value should be derived via brightness algorithm")})});p("derived-complement",({setup:n,teardown:e,test:t,assert:o,assertEqual:r,confidenceCheck:s})=>{n(le),e(ce),s(({$derivedLinkContext:i})=>{o(i,"derivedLinkContext is required")}),t("manipulating the main causes the other to derive the complementary value",({$main:i,$derived:a,$derivedInput:l,$derivedLabel:c,$derivedLinkContext:d})=>{i.setAttribute("hex-code","#334488"),r("#887733",l.value,"Value should be derived via derived algorithm"),r("#887733",c.textContent,"Value should be derived via derived algorithm"),r("Complement",d.textContent)})});var K=h(({subject:n,clone:e,require:t})=>{let o=e(n.children[0],"children[0]"),r=e(n.children[1],"children[1]"),s=e(n.children[2],"children[2]"),i=t(o.querySelector("input[type=color]"),"lower input"),a=t(o.querySelector("label code"),"lower label's code"),l=t(o.querySelector("[data-link-context]"),"lower' link context"),c=t(s.querySelector("input[type=color]"),"upper input"),d=t(s.querySelector("label code"),"upper label's code"),u=t(s.querySelector("[data-link-context]"),"upper's link context");return document.body.appendChild(o),document.body.appendChild(r),document.body.appendChild(s),r.id=`test-case-${r.id}`,o.id=`test-case-${o.id}`,s.id=`test-case-${s.id}`,o.setAttribute("derived-from",r.id),s.setAttribute("derived-from",r.id),{$lower:o,$lowerInput:i,$lowerLabel:a,$lowerLinkContext:l,$main:r,$upper:s,$upperInput:c,$upperLabel:d,$upperLinkContext:u}},"lowerUpperSetup"),W=h(({$lower:n,$main:e,$upper:t})=>{document.body.removeChild(n),document.body.removeChild(e),document.body.removeChild(t)},"lowerUpperTeardown");p("derived-split-complement",({setup:n,teardown:e,test:t,assert:o,assertEqual:r})=>{n(K),e(W),t("manipulating the main causes the other to derive the complementary value",({$main:s,$upperInput:i,$upperLabel:a,$upperLinkContext:l,$lowerInput:c,$lowerLabel:d,$lowerLinkContext:u})=>{s.setAttribute("hex-code","#334488"),r("#6E8833",c.value.toUpperCase(),"Value should be derived via split complement lower algorithm"),r("#6E8833",d.textContent.toUpperCase(),"Value should be derived via split complement lower algorithm"),r("#884D33",i.value.toUpperCase(),"Value should be derived via split complement upper algorithm"),r("#884D33",a.textContent.toUpperCase(),"Value should be derived via split complement upper algorithm"),r("Split Complement",l.textContent),r("Split Complement",u.textContent)})});p("derived-analogous",({setup:n,teardown:e,test:t,assert:o,assertEqual:r})=>{n(K),e(W),t("manipulating the main causes the others to derive analogous values",({$main:s,$upperInput:i,$upperLabel:a,$upperLinkContext:l,$lowerInput:c,$lowerLabel:d,$lowerLinkContext:u})=>{s.setAttribute("hex-code","#334488"),r("#4D3388",c.value.toUpperCase(),"Value should be derived via analogous lower algorithm"),r("#4D3388",d.textContent.toUpperCase(),"Value should be derived via analogous lower algorithm"),r("#336E88",i.value.toUpperCase(),"Value should be derived via analogous upper algorithm"),r("#336E88",a.textContent.toUpperCase(),"Value should be derived via analogous upper algorithm"),r("Analogous",l.textContent),r("Analogous",u.textContent)})});p("derived-triad",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(K),e(W),t("manipulating the main causes the others to derive triad values",({$main:i,$upperInput:a,$upperLabel:l,$upperLinkContext:c,$lowerInput:d,$lowerLabel:u,$lowerLinkContext:m})=>{i.setAttribute("hex-code","#334488"),s("#448833",d.value,"Value should be derived via triad lower algorithm"),s("#448833",u.textContent,"Value should be derived via triad lower algorithm"),s("#883344",a.value,"Value should be derived via triad upper algorithm"),s("#883344",l.textContent,"Value should be derived via triad upper algorithm"),s("Triad",c.textContent),s("Triad",m.textContent)})});p("derived-disconnected",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(K),e(W),t("disconnecting one from the main stops updating and reverts the context to the default",({$main:i,$upper:a,$upperInput:l,$upperLabel:c,$upperLinkContext:d,$lowerInput:u,$lowerLabel:m,$lowerLinkContext:f})=>{a.setAttribute("default-link-context","Rando"),a.setAttribute("show-warnings","upper"),a.removeAttribute("derived-from"),a.removeAttribute("derivation-algorithm"),l.value="#123456",l.dispatchEvent(new Event("change")),i.setAttribute("hex-code","#334488"),s("#448833",u.value,"Value should be derived via triad lower algorithm"),s("#123456",l.value,"Value should NOT be derived via triad upper algorithm"),s("Rando",d.textContent,"Swatch that's disconnected should show the default context"),s("Triad",f.textContent,"Swatch that's not disconnected should show the derived context")})});p("base-case",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(({clone:i,require:a})=>{let l=i(o.children[0],"first child"),c=a(l.querySelector("input[type=color]")),d=a(l.querySelector("label")),u=a(l.querySelector("[data-link-context]"));return document.body.appendChild(l),{component:l,$input:c,$label:d,$linkContext:u}}),e(({component:i})=>{document.body.removeChild(i)}),t("hex-code attribute should be copied to input value and set as label",({component:i,$input:a,$label:l})=>{let c=i.getAttribute("hex-code"),d=a.value;s(c,d,"input's value should be set to the component's hex-code");let u=l.querySelector("code");r(u,`Expected a <code> inside the label: ${l.outerHTML}`),s(u.textContent,c,"<code> should have textContent set to the hex code")}),t("when input is changed, the hex-code attribute is updated, as is the label",({component:i,$input:a,$label:l})=>{let c="#123456";a.value=c,a.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0}));let d=i.getAttribute("hex-code");s(c,d,"component's hex-code attribute should be set to input's value");let u=l.querySelector("code");r(u,`Expected a <code> inside the label: ${l.outerHTML}`),s(u.textContent,c,"<code> should have textContent set to the input's label")}),t("when link-context default is given, that is used if there is no other link context",({component:i,$linkContext:a})=>{i.setAttribute("default-link-context","Primary"),s("Primary",a.textContent,"link context should show the overridden value")})});p("non-input-case",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(({clone:i,require:a})=>{let l=i(o.children[0],"children[0]"),c=a(l.querySelector("[data-color]"),"data-color"),d=a(l.querySelector("[data-hexcode]"),"data-hexcode");return document.body.appendChild(l),{component:l,$color:c,$hexcode:d}}),e(({component:i})=>{document.body.removeChild(i)}),t("hex-code attribute should be copied to [data-color] background color and set as label",({component:i,$color:a,$hexcode:l})=>{let c=i.getAttribute("hex-code"),d=a.style.backgroundColor,[u,m,f,C]=d.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);r(!!u,`Expected style property to be rgb(r,g,b) but was '${d}'`);let v=N.fromRGB(m,f,C).hexCode();s(c,v,"[data-color]'s backgroundColor should be set to the component's hex-code");let g=l.querySelector("code");r(g,`Expected a <code> inside the label: ${l.outerHTML}`),s(g.textContent,c,"<code> should have textContent set to the hex code")})});p("multiple",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s,assertNotEqual:i})=>{n(()=>{let a=o.children[0].cloneNode(!0),l=a.querySelectorAll("input[type=color]"),c=a.querySelectorAll("input:not([type=color])"),d=a.querySelectorAll("label");if(l.length<2)throw"ERROR: Not at least 2 input[type=color]";if(c.length<1)throw"ERROR: Not at least 1 input not color";if(d.length<2)throw"ERROR: Not at least 2 label";let u=Array.from(c).map(m=>m.id);return document.body.appendChild(a),{component:a,$inputs:l,$otherInputs:c,$labels:d,otherInputIds:u}}),e(({component:a})=>{document.body.removeChild(a)}),t("when one input is changed, it is reflected to all others as well as the hex-code attribute",({component:a,$inputs:l,$otherInputs:c,$labels:d,otherInputIds:u})=>{let m="#123456";l[0].value=m,l[0].dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0}));let f=a.getAttribute("hex-code");s(m,f,"the component's hex-code attribute should've been given the input's value"),l.forEach(C=>{s(m,C.value,`Input's value should've been the one the user entered: ${C.outerHTML}`)}),c.forEach(C=>{s(m,C.value,"Non-color input's value should be set as well")}),d.forEach(C=>{if(u.indexOf(C.htmlFor)!=-1)r(String(C.textContent).indexOf(m)==-1,`labels for non-color inputs should not be changed: ${C.htmlFor}`);else{let g=C.querySelector("code");r(g,"No <code> inside the label"),s(m,g.textContent,"Label's <code> should have been given the value")}})}),t("the hex-code attribute will apply to all inputs and related labels",({component:a,$inputs:l,$otherInputs:c,$labels:d,otherInputIds:u})=>{let m=a.getAttribute("hex-code");l.forEach(f=>{s(m,f.value,"Color input's value should've been set to the hex-code")}),c.forEach(f=>{s(m,f.value,"Non-color input's value should be set as well")}),d.forEach(f=>{if(u.indexOf(f.htmlFor)!=-1)r(String(f.textContent).indexOf(m)==-1,`Other input's label should not contain the hex code ${f.outerHTML}`);else{let v=f.querySelector("code");r(v,"label should have a <code> element"),s(m,v.textContent,"<code> element should have the hex code")}})})});var $=class{static{h(this,"Logger")}static forPrefix(e){return e?new de(e):new Y}log(){throw"Subclass must implement"}info(...e){this.log("info",...e)}warn(...e){this.log("warn",...e)}},Y=class extends ${static{h(this,"BufferedLogger")}constructor(){super(),this.messages=[]}log(...e){this.messages.push(e)}},de=class extends ${static{h(this,"PrefixedLogger")}constructor(e){super(),this.prefix=e===!0?"debug":e}dump(e){e instanceof Y&&e.messages.forEach(t=>{this.log(...t)})}log(e,...t){if(typeof t[0]=="string"){let o=`[prefix:${this.prefix}]:${t[0]}`;console[e](o,...t.slice(1))}else console[e](this.prefix,...t)}},he=$;var P=class n{static{h(this,"RichString")}static fromString(e){return e instanceof n?e:e?new n(String(e)):null}constructor(e){if(typeof e!="string")throw`You may only construct a RichString with a String, not a ${typeof e}`;this.string=e}capitalize(){return new n(this.string.charAt(0).toUpperCase()+this.string.slice(1))}decapitalize(){return new n(this.string.charAt(0).toLowerCase()+this.string.slice(1))}camelize(){return n.fromString(this.string.replace(/[_.-](\w|$)/g,function(e,t){return t.toUpperCase()}))}humanize(){return this.decamlize({spacer:" "}).capitalize()}decamlize({spacer:e="_"}={}){if(this.string.length<2)return new n(this.string.toLowerCase());let t=`$1${e}$2`,o=this.string.replace(/([\p{Lowercase_Letter}\d])(\p{Uppercase_Letter})/gu,t);return new n(o.replace(/(\p{Uppercase_Letter})(\p{Uppercase_Letter}\p{Lowercase_Letter}+)/gu,t).toLowerCase())}toString(){return this.string}toStringOrNull(){return this.string.trim()==""?null:this.string}};var T=class extends HTMLElement{static{h(this,"BaseCustomElement")}constructor(){super(),this.logger=he.forPrefix(null)}static define(){if(!this.tagName)throw"To use BaseCustomElement, you must define the static member tagName to return your custom tag's name";customElements.define(this.tagName,this)}showWarningsChangedCallback({oldValue:e,newValue:t}){let o;!e&&t&&(o=this.logger);let r=t==""?this.id:t;this.logger=he.forPrefix(r),o&&this.logger.dump(o)}attributeChangedCallback(e,t,o){let r=`${new P(e).camelize()}ChangedCallback`;this[r]?this[r]({oldValue:t,newValue:o}):this.constructor.observedAttributes.indexOf(e)!=-1&&console.warn("Observing %s but no method named %s was found to handle it",e,r),this.__render()}disconnectedCallback(){this.__disconnected=!0,this.__connected=!1,this.onDisconnected&&this.onDisconnected()}connectedCallback(){this.__connected=!0,this.__disconnected=!1,this.onConnected&&this.onConnected(),this.__render()}get isConnected(){return!!this.__connected}__render(){this.__disconnected||this.render&&this.render()}};var y=class{static{h(this,"BaseDerivation")}hsl(e){return N.fromHexCode(e).hsl()}hexCode(e,t,o){return N.fromHSL(e,t,o).hexCode()}};var j=class extends y{static{h(this,"BrightnessDerivation")}derive(e,t={}){return t.darken&&!isNaN(t.darken)?this.darken(e,t.darken):t.brighten&&!isNaN(t.brighten)?this.brighten(e,t.brighten):e}darken(e,t){let[o,r,s]=this.hsl(e),i=s,a=t/100,l=i*a,c=s-l;return this.hexCode(o,r,c)}brighten(e,t){let[o,r,s]=this.hsl(e),i=100-s,a=t/100,l=i*a,c=s+l;return this.hexCode(o,r,c)}};var A=class extends y{static{h(this,"ComplementaryDerivation")}derive(e,t={}){let[o,r,s]=this.hsl(e),i=(o+180)%360;return this.hexCode(i,r,s)}get humanName(){return"Complement"}};var O=class extends y{static{h(this,"AnalogousUpperDerivation")}derive(e,t={}){let[o,r,s]=this.hsl(e),i=(o+330)%360;return this.hexCode(i,r,s)}get humanName(){return"Analogous"}},F=class extends y{static{h(this,"AnalogousLowerDerivation")}derive(e,t={}){let[o,r,s]=this.hsl(e),i=(o+30)%360;return this.hexCode(i,r,s)}get humanName(){return"Analogous"}};var J=class extends y{static{h(this,"SplitComplementaryUpperDerivation")}constructor(){super(),this.complementary=new A,this.analogousUpper=new O}derive(e,t={}){return this.analogousUpper.derive(this.complementary.derive(e))}get humanName(){return"Split Complement"}},Q=class extends y{static{h(this,"SplitComplementaryLowerDerivation")}constructor(){super(),this.complementary=new A,this.analogousLower=new F}derive(e,t={}){return this.analogousLower.derive(this.complementary.derive(e))}get humanName(){return"Split Complement"}};var Z=class extends y{static{h(this,"TriadUpperDerivation")}derive(e,t={}){let[o,r,s]=this.hsl(e),i=(o+120)%360;return this.hexCode(i,r,s)}get humanName(){return"Triad"}},ee=class extends y{static{h(this,"TriadLowerDerivation")}derive(e,t={}){let[o,r,s]=this.hsl(e),i=(o+240)%360;return this.hexCode(i,r,s)}get humanName(){return"Triad"}};var M=class n{static{h(this,"DerivationAlgorithm")}static fromString(e,{throwOnUnknown:t=!1}={}){if(e instanceof n)return e;if(e=="brightness")return new j;if(e=="complement")return new A;if(e=="split-complement-lower")return new Q;if(e=="split-complement-upper")return new J;if(e=="analogous-lower")return new F;if(e=="analogous-upper")return new O;if(e=="triad-lower")return new ee;if(e=="triad-upper")return new Z;if(t)throw`No such DerivationAlgorithm '${e}'`;return null}};var z=class extends T{static{h(this,"ColorSwatchComponent")}static tagName="g-color-swatch";static observedAttributes=["hex-code","derived-from","derivation-algorithm","darken-by","brighten-by","show-warnings","default-link-context"];static HEX_CODE_CHANGE_EVENT_NAME="hex-code-change";constructor(){super(),this.onInputChangeCallback=e=>{this.setAttribute("hex-code",e.target.value)},this.onDerivedElementChangeCallback=e=>{e.target!=this.derivedFromElement&&this.logger.warn("Got an event from not our derived"),this._deriveHexCodeFromSwatch(e.target)},this.derivationAlgorithm=M.fromString("brightness",{throwOnUnknown:!0})}hexCodeChangedCallback({newValue:e}){this.hexCode=e,this._dispatchHexcodeChanged()}derivedFromChangedCallback({newValue:e}){this.derivedFromElement&&this.derivedFromElement.removeEventListener(this.hexCodeChangedEventName,this.onDerivedElementChangeCallback),this.derivedFromId=e}defaultLinkContextChangedCallback({newValue:e}){this.defaultLinkContext=e}darkenByChangedCallback({newValue:e}){this.darkenBy=e,this._updateDerivationifNeeded({whenHexCodeExists:!0})}brightenByChangedCallback({newValue:e}){this.brightenBy=e,this._updateDerivationifNeeded({whenHexCodeExists:!0})}derivationAlgorithmChangedCallback({newValue:e}){this.derivationAlgorithm=M.fromString(e),this.derivationAlgorithm?this._updateDerivationifNeeded({whenHexCodeExists:!0}):e&&this.logger.warn("derivation-algorithm '%s' is not valid",e)}static INPUT_SELECTOR="input";static DATA_COLOR_SELECTOR="[data-color]";_eachInput(e){let t=this.querySelectorAll(this.constructor.INPUT_SELECTOR);return t.forEach(e),t.length}_eachDataColor(e){let t=this.querySelectorAll(this.constructor.DATA_COLOR_SELECTOR);return t.forEach(e),t.length}_eachCodeElementInsideRelevantLabel(e){this.querySelectorAll("label").forEach(t=>{let o;if(t.htmlFor?o=this.querySelector(`[id=${t.htmlFor}][type=color]`):o=t.querySelector("input[type=color]"),o){let r=t.querySelector("code");r||(r=document.createElement("code"),t.appendChild(r)),e(r)}else this.logger.warn("Orphaned label inside the element does not wrap nor reference a color input inside the element: %o",t)}),this.querySelectorAll("[data-hexcode]").forEach(t=>{let o=t.querySelector("code");o||(o=document.createElement("code"),t.appendChild(o)),e(o)})}render(){let e=this._eachInput(o=>{o.value=this.hexCode,o.addEventListener("change",this.onInputChangeCallback),o.getAttributeNames().indexOf("disabled")!=-1||this.derivedFromId&&this.logger.warn("derived-from-id is set, but an enabled input was detected: %o",o)});this._eachDataColor(o=>{o.style.backgroundColor=this.hexCode})==0&&e==0&&this.logger.warn("There were no <input type=color> nor [data-color] elements found"),this._eachLinkContext(o=>{this.defaultLinkContext?o.textContent=this.defaultLinkContext:o.innerHTML="&nbsp;"}),this.derivedFromId&&this._updateDerivationifNeeded({whenHexCodeExists:!1}),this.hexCode?this._eachCodeElementInsideRelevantLabel(o=>{o.textContent=this.hexCode}):this._eachCodeElementInsideRelevantLabel(o=>{o.textContent=""})}_deriveHexCodeFromSwatch(e){let t=e.hexCode;t?this._deriveHexCodeFrom(t):(this.logger.warn("No hexcode on the derived element: %o",event.target),this.removeAttribute("hex-code"))}_deriveHexCodeFrom(e){let t=this.darkenBy?parseInt(this.darkenBy):null,o=this.brightenBy?parseInt(this.brightenBy):null;this.derivationAlgorithm&&(e=this.derivationAlgorithm.derive(e,{darken:t,brighten:o})),this.setAttribute("hex-code",e)}_eachLinkContext(e){this.querySelectorAll("[data-link-context]").forEach(e)}get derivedFromElement(){return document.getElementById(this.derivedFromId)}_updateDerivationifNeeded({whenHexCodeExists:e}){let t=this.derivedFromElement,o=!!this.hexCode;t&&(t.tagName.toLowerCase()==this.constructor.tagName?(t.addEventListener(this.hexCodeChangedEventName,this.onDerivedElementChangeCallback),t.hexCode&&e==o&&this._deriveHexCodeFrom(t.hexCode),this._eachLinkContext(r=>r.textContent=this.derivationAlgorithm.humanName)):this.logger.warn("Derived element has id '%s', but this is a %s, not a %s",this.derivedFromId,t.tagName,this.constructor.tagName))}get hexCodeChangedEventName(){return this.constructor.HEX_CODE_CHANGE_EVENT_NAME}_dispatchHexcodeChanged(){this.dispatchEvent(new CustomEvent(this.hexCodeChangedEventName,{cancelable:!1,bubbles:!0}))}get forTesting(){return{dispatchHexCodeChanged:()=>{this._dispatchHexcodeChanged()}}}};var G=class extends T{static{h(this,"ColorNameComponent")}static tagName="g-color-name";static observedAttributes=["color-swatch","show-warnings"];static NAMES_BASED_ON_HUE=[["Red",[0,21]],["Orange",[21,41]],["Yellow",[41,74]],["Green",[74,167]],["Blue",[167,259]],["Purple",[259,333]],["Red",[333,360]]];constructor(){super(),this.updateNameEventListener=()=>{this.render()},this.inputChangeListener=e=>{let t=e.target.value;t&&String(t).trim()!=""?(e.target.dataset.userOverride=!0,this.dispatchEvent(new CustomEvent("name-change",{cancelable:!1,bubbles:!0}))):(delete e.target.dataset.userOverride,this.dispatchEvent(new CustomEvent("name-cleared",{cancelable:!1,bubbles:!0}))),this.render()}}onDisconnected(){this.colorSwatch&&this.colorSwatch.removeEventListener("hex-code-change",this.updateNameEventListener),this.input&&this.input.removeEventListener("change",this.inputChangeListener)}colorSwatchChangedCallback({newValue:e}){let t=document.getElementById(e);t!=this.colorSwatch&&(this.colorSwatch&&this.colorSwatch.removeEventListener("hex-code-change",this.updateNameEventListener),t&&(this.updateNameEventListener.id=`listener-${this.id}`,t.addEventListener("hex-code-change",this.updateNameEventListener))),this.colorSwatch=t}_input(){let e=this.querySelectorAll("input[type=text]");return e.length>1&&this.logger.warn("There is more than one input - only the first one found will be used"),e[0]}render(){let e=this._input();this.input!=e&&(this.input&&this.input.removeEventListener("change",this.inputChangeListener),e&&e.addEventListener("change",this.inputChangeListener),this.input=e),e&&!e.dataset.userOverride&&this.colorSwatch&&this.colorSwatch.hexCode&&(e.value=this._name(this.colorSwatch.hexCode))}get name(){let e=this._input();return e?e.value:null}get userOverride(){let e=this._input();return e?e.dataset.userOverride:!1}overrideColorName(e){let t=this._input();t&&(t.dataset.userOverride=!0,t.value=e)}restoreDefaultColorName(){let e=this._input();e&&(delete e.dataset.userOverride,e.value="",this.render())}_name(e){let[t,o,r]=N.fromHexCode(e).hsl();if(isNaN(t)||o==0)return"Gray";let s=this.constructor.NAMES_BASED_ON_HUE.find(([i,[a,l]])=>{if(t>=a&&t<=l)return!0});if(!s)throw`Something is wrong: ${e}'s hue of '${t}' was not in namesBasedOnHue`;return s[0]}};var Ae=h(({require:n,clone:e,subject:t})=>{let o=e(t.querySelector(G.tagName),"text input"),r=e(t.querySelector(z.tagName),"text input"),s=n(o.querySelector("input[type=text]"),"text input");return r.id=`test-case-${r.id}`,o.id=`test-case${o.id}`,document.body.appendChild(o),document.body.appendChild(r),o.setAttribute("color-swatch",r.id),{$colorName:o,$input:s,$swatch:r}},"basicSetup"),Ee=h(({$colorName:n,$swatch:e})=>{document.body.removeChild(n),document.body.removeChild(e)},"basicTeardown");p("name-derived-from-color-input",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(Ae),e(Ee),t("by default, the input's value is the broad category name of the color",({$colorName:i,$input:a,$swatch:l})=>{l.setAttribute("hex-code","#ff0000"),l.forTesting.dispatchHexCodeChanged(),s("Red",a.value,"<input>'s value should be Red"),s("Red",i.name,"The name attribute should return the value"),r(!i.userOverride,"Since the value is the default, userOverride should be false")}),t("if the swatch's value changes, the input's value is updated",({$colorName:i,$input:a,$swatch:l})=>{l.setAttribute("hex-code","#ff0000"),l.forTesting.dispatchHexCodeChanged(),l.setAttribute("hex-code","#00ff00"),l.forTesting.dispatchHexCodeChanged(),s("Green",a.value,"<input>'s value should be Green"),s("Green",i.name,"The name attribute should return the value"),r(!i.userOverride,"Since the value is the default, userOverride should be false")}),t("if the user has changed the input, a data- attribute is set, an event fired, and changes to the swatch are ignored",({$colorName:i,$input:a,$swatch:l})=>{let c;i.addEventListener("name-change",u=>{c=u}),l.setAttribute("hex-code","#ff0000"),l.forTesting.dispatchHexCodeChanged();let d="Maroon-esque";a.value=d,a.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0})),l.setAttribute("hex-code","#00ff00"),l.forTesting.dispatchHexCodeChanged(),s(d,a.value,"<input>'s value should be the same as what the user input"),r(a.dataset.userOverride,"<input> should have data-user-override set to allow detection of this situation"),s(d,i.name,"The name attribute should return the value"),r(i.userOverride,"Since the user has overridden the value, userOverride should be true"),r(c,"An event should've been received")}),t("if the user has changed the input, then clears it, the name should be restored to the swatch's default",({$colorName:i,$input:a,$swatch:l})=>{l.setAttribute("hex-code","#ff0000"),l.forTesting.dispatchHexCodeChanged();let c="Maroon-esque";a.value=c,a.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0})),l.setAttribute("hex-code","#00ff00"),l.forTesting.dispatchHexCodeChanged();let d;i.addEventListener("name-cleared",u=>{d=u}),a.value="",a.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0})),s("Green",a.value,"<input>'s value should revert to the element's default"),r(!a.dataset.userOverride,"<input> should not have data-user-override set"),r(d,"An event should've been received")})});p("name-override-via-method-color-input",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(Ae),e(Ee),t("the value should be the overridden value from the attribute",({$colorName:i,$input:a,$swatch:l})=>{l.setAttribute("hex-code","#ff0000"),l.forTesting.dispatchHexCodeChanged(),i.overrideColorName("Puce"),s("Puce",a.value,"<input>'s value should what was provided in the attribute"),r(a.dataset.userOverride,"<input> should have data-user-override set to allow detection of this situation")})});var Ne=h(n=>({subject:e,require:t,clone:o})=>{let r=n({subject:e,require:t,clone:o}),s=t(r.querySelector("[data-preview]"),"[data-preview] button"),i=t(r.querySelector("[data-unlink]"),"[data-unlink] button"),a=t(r.querySelector("[data-remove]"),"[data-remove] button"),l=`palette-color-scale-${crypto.randomUUID()}`;r.id=`test-case-${l}`;let c=document.createElement("div");return c.appendChild(r),document.body.appendChild(c),r.querySelectorAll("g-color-swatch").forEach(d=>{d.id&&(d.id=`test-case-${d.id}`),d.removeAttribute("derived-from"),d.removeAttribute("darken-by"),d.removeAttribute("brighten-by")}),r.removeAttribute("scale-algorithm"),{container:c,$paletteColor:r,$previewButton:s,$unlinkButton:i,$removeButton:a}},"basicSetup"),te=Ne(({subject:n,clone:e})=>e(n.children[0],"children[0]")),V=h(({container:n})=>{try{document.body.removeChild(n)}catch(e){if(e instanceof DOMException&&e.name=="NotFoundError")console.debug("Ignoring %o",e);else throw e}},"teardownAdded");p("primary-color",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(te),e(V),t("preview is enabled, but unlink and remove are not",({$previewButton:i,$unlinkButton:a,$removeButton:l})=>{r(!i.getAttribute("disabled"),"Expected preview button to be enabled"),r(a.getAttribute("disabled"),"Expected unlink button to be disabled"),r(l.getAttribute("disabled"),"Expected remove button to be disabled")}),t("Relevant data is exposed: current color, user override, scale, and base swatch",({$paletteColor:i})=>{i.setAttribute("scale-algorithm","linear"),s("Purple",i.colorName,"Color name should reflect the value in the color name field"),r(!i.colorNameUserOverride,"Color name is not user defined when using the default"),s("#140826",i.colorScale[0].toUpperCase(),"The first color in the scale when using exp should be the darkest"),s("#28104C",i.colorScale[1].toUpperCase(),"The second color in the scale when using exp should be the darker"),s("#3C1971",i.colorScale[2].toUpperCase(),"The third color in the scale when using exp should be the dark"),s("#6429BD",i.colorScale[3].toUpperCase(),"The fourth color in the scale when using exp should be the base"),s("#905EDC",i.colorScale[4].toUpperCase(),"The fifth color in the scale when using exp should be the bright"),s("#C0A3EB",i.colorScale[5].toUpperCase(),"The sixth color in the scale when using exp should be the brighter"),s("#EFE8FA",i.colorScale[6].toUpperCase(),"The seventh color in the scale when using exp should be the brightest"),s(i.querySelectorAll("g-color-swatch")[3],i.baseColorSwatch,"Base color swatch should be the middle one")}),t("values are derived based on a linear percentage",({$paletteColor:i})=>{i.setAttribute("scale-algorithm","linear");let a=Array.from(i.querySelectorAll("g-color-swatch")),l=a[3];a.forEach((c,d)=>{d!=3&&(s(l.id,c.getAttribute("derived-from"),`Swatch ${d} should be derived-from the base (${l.id})`),s("brightness",c.getAttribute("derivation-algorithm","brightness"),`Swatch ${d} should use the brightness algorithm`))}),s("80%",a[0].getAttribute("darken-by"),"Swatches earlier in scale should have darker colors"),s("60%",a[1].getAttribute("darken-by"),"Swatches earlier in scale should have darker colors"),s("40%",a[2].getAttribute("darken-by"),"Swatches earlier in scale should have darker colors"),s("30%",a[4].getAttribute("brighten-by"),"Swatches later in scale should have brighter colors"),s("60%",a[5].getAttribute("brighten-by"),"Swatches later in scale should have brighter colors"),s("90%",a[6].getAttribute("brighten-by"),"Swatches later in scale should have brighter colors"),s(i.querySelectorAll("g-color-swatch")[3],i.baseColorSwatch,"The base swatch should be the middle one")}),t("The preview event is fired when the preview button is clicked and includes the relevant info",({$paletteColor:i,$previewButton:a})=>{let l=!1,c=null;i.addEventListener("preview-scale",d=>{l=!0,c=d.detail}),a.dispatchEvent(new Event("click")),r(l,"The event listener should've been called when the button was clicked"),s(i.colorName,c.colorName,"details should have the color name"),s(i.colorNameUserOverride,c.colorNameUserOverride,"details should have the override flag"),r(7,c.colorScale.length,"details should have the same # of colors in the scale"),i.colorScale.forEach((d,u)=>{s(d,c.colorScale[u],`Index ${u} should match the component`)}),s(i.baseColorSwatch.hexCode,c.baseColor,"Base color should be explicitly called out")})});p("derive-color-scale-exp",({setup:n,teardown:e,confidenceCheck:t,test:o,subject:r,assert:s,assertEqual:i})=>{n(te),e(V),t(({$paletteColor:a})=>{let l=a.querySelectorAll("g-color-swatch").length;if(l!=7)throw`Test setup is borked - there are ${l} swatches and not 5`}),o("derivations and configuration are set automatically on swatches based on an exponential progression",({$paletteColor:a})=>{let l=Array.from(a.querySelectorAll("g-color-swatch")),c=l[3];a.setAttribute("scale-algorithm","exponential"),s(c.id,`Base swatch should have been given an ID: ${c.outerHTML}`),i(1,document.querySelectorAll(`#${c.id}`).length,"The assigned ID should be unique"),l.forEach((d,u)=>{u!=3&&(i(c.id,d.getAttribute("derived-from"),`Swatch ${u} should be derived-from the base (${c.id})`),i("brightness",d.getAttribute("derivation-algorithm","brightness"),`Swatch ${u} should use the brightness algorithm`))}),i("88%",l[0].getAttribute("darken-by"),"Swatches earlier in scale should have darker colors"),i("64%",l[1].getAttribute("darken-by"),"Swatches earlier in scale should have darker colors"),i("35%",l[2].getAttribute("darken-by"),"Swatches earlier in scale should have darker colors"),i("49%",l[4].getAttribute("brighten-by"),"Swatches later in scale should have brighter colors"),i("87%",l[5].getAttribute("brighten-by"),"Swatches later in scale should have brighter colors"),i("96%",l[6].getAttribute("brighten-by"),"Swatches later in scale should have brighter colors"),i(a.querySelectorAll("g-color-swatch")[3],a.baseColorSwatch,"The base swatch should be the middle one")})});p("linked-to-primary",({setup:n,teardown:e,test:t,confidenceCheck:o,subject:r,assert:s,assertEqual:i})=>{n((...a)=>Ne(h(({subject:c,clone:d})=>d(c.querySelector("g-palette-color-scale[linked-to-primary]"),"g-palette-color-scale[linked-to-primary]",c),"locatePaletteColor"))(...a)),n(({subject:a,container:l,clone:c,$paletteColor:d})=>{let u=c(a.querySelector("g-palette-color-scale[primary]"));return u.id=`test-case-primary-${crypto.randomUUID()}`,l.appendChild(u),d.removeAttribute("linked-to-primary"),d.setAttribute("linked-to-primary","complement"),{$primary:u}}),o(({$primary:a,$paletteColor:l})=>{s(a.baseColorSwatch,"the linked-to-primary g-color-scale should've had a baseColorSwatch"),s(l.baseColorSwatch.querySelectorAll("input[type=color]").length>0,"there should be at least one color input on our base color")}),e(V),t("the base color is linked to the primary using the value for linked-to-primary",({$paletteColor:a,$primary:l})=>{i(l.baseColorSwatch.id,a.baseColorSwatch.getAttribute("derived-from"),`Expected our base color's derived-from to have been set to the primary's base color: primary ${l.baseColorSwatch.outerHTML}
us: ${a.baseColorSwatch.outerHTML}`),i(a.getAttribute("linked-to-primary"),a.baseColorSwatch.getAttribute("derivation-algorithm"))}),t("all buttons are enabled",({$paletteColor:a,$previewButton:l,$unlinkButton:c,$removeButton:d})=>{s(!l.getAttribute("disabled"),"Expected preview button to be enabled"),s(!c.getAttribute("disabled"),"Expected unlink button to be enabled"),s(!d.getAttribute("disabled"),"Expected remove button to be enabled")}),t("The preview event is fired when the preview button is clicked",({$paletteColor:a,$previewButton:l})=>{let c=!1;a.addEventListener("preview-scale",d=>c=!0),l.dispatchEvent(new Event("click")),s(c,"The event listener should've been called when the button was clicked")}),t("The remove event is fired after the element is removed, when the remove button is clicked",({$paletteColor:a,$removeButton:l})=>{let c=!1,d=null,u=a.parentElement,m=a.id;a.addEventListener("remove-scale",f=>{c=!0,d=!!u.children.namedItem(m)}),l.dispatchEvent(new Event("click")),s(c,"The event listener should've been called when the button was clicked"),s(!d,"Removal should've been called before the event handler"),s(!u.children.namedItem(m),"The element should've been removed")}),t("The unlink event is fired when unlink is clicked and the derivation attributes from the base swatch are removed, but it's hex-code is preserved and any inputs inside are made editable",({$paletteColor:a,$unlinkButton:l,$primary:c})=>{let d=null,u=null;a.addEventListener("unlink-from-primary",m=>{d=!0,u=a.getAttributeNames().indexOf("linked-to-primary")!=-1}),l.dispatchEvent(new Event("click")),s(d,"The event listener should've been called when the button was clicked"),s(!u,"Unlinking should've occured before the handler was called"),s(a.getAttributeNames().indexOf("linked-to-primary")==-1,"linked-to-primary attribute should've been removed"),s(a.baseColorSwatch.getAttributeNames().indexOf("derived-from")==-1,"derived-from should've been removed"),s(a.baseColorSwatch.getAttributeNames().indexOf("derivation-algorithm")==-1,"derivation-algorithm should've been removed"),i("#82BD29",a.baseColorSwatch.getAttribute("hex-code"),"hex-code shoud've been set on the base color"),a.baseColorSwatch.querySelectorAll("input[type=color]").forEach(m=>{s(m.getAttributeNames().indexOf("disabled")==-1,`Input should not have disabled set: ${m.outerHTML}`)}),c.baseColorSwatch.querySelector("input[type=color]").value="#111111",c.baseColorSwatch.querySelector("input[type=color]").dispatchEvent(new Event("change")),i("#82BD29",a.baseColorSwatch.getAttribute("hex-code"),"hex-code shoud've been set on the base color"),i("#82bd29",a.baseColorSwatch.querySelector("input[type=color]").value,"input value shoud've been set on the base color")})});p("unlinked-color",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(te),e(V),t("preview and remove are enabled, but unlink id not",({$paletteColor:i,$previewButton:a,$unlinkButton:l,$removeButton:c})=>{r(!a.getAttribute("disabled"),"Expected preview button to be enabled"),r(l.getAttribute("disabled"),"Expected unlink button to be disabled"),r(!c.getAttribute("disabled"),"Expected remove button to be enabled")}),t("The preview event is fired when the preview button is clicked",({$paletteColor:i,$previewButton:a})=>{let l=!1;i.addEventListener("preview-scale",c=>l=!0),a.dispatchEvent(new Event("click")),r(l,"The event listener should've been called when the button was clicked")}),t("The remove event is fired and the element is removed when the remove button is clicked",({$paletteColor:i,$removeButton:a})=>{let l=!1,c=i.parentElement,d=i.id;i.addEventListener("remove-scale",u=>l=!0),a.dispatchEvent(new Event("click")),r(l,"The event listener should've been called when the button was clicked"),r(!c.children.namedItem(d),"The element should've been removed")})});p("color-changed-event",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(te),e(V),t("when the base color is changed, an event id fired",({$paletteColor:i})=>{let a=null;i.addEventListener("base-color-changed",l=>{a=l}),i.baseColorSwatch.forTesting.dispatchHexCodeChanged(),r(a,"Event should've been fired"),r(a.bubbles,"Event should bubble")})});var ue=h(({require:n,subject:e,clone:t})=>{let o=t(e.children[0],"first child"),r=n(o.querySelector("button")),s=t(e.children[1],"second child");return s.id=`test-case-${s.id}`,o.setAttribute("palette",s.id),s.querySelectorAll("g-color-swatch").forEach(i=>{i.id&&(i.id=`${palette.id}-${i.id}`)}),s.querySelectorAll("g-color-name").forEach(i=>{let a=i.getAttribute("color-swatch");a&&i.setAttribute("color-swatch",`${palette.id}-${a}`)}),document.body.appendChild(s),document.body.appendChild(o),{$component:o,$button:r,$palette:s}},"basicSetup"),be=h(({$component:n,$palette:e})=>{document.body.removeChild(n),document.body.removeChild(e)},"basicTeardown"),x=h((n,{linkedToPrimary:e})=>{if(assert(n.baseColorSwatch.id,"Base color swatch must have an id"),assertEqual(1,document.querySelectorAll(`[id=${n.baseColorSwatch.id}]`).length,`Base color swatch's ID ${n.baseColorSwatch.id} must be unique`),e){assertEqual(e,n.getAttribute("linked-to-primary"),`New scale should be linked to primary as ${e}`);let o=n.baseColorSwatch.querySelectorAll("input[type=color]").length,r=n.baseColorSwatch.querySelectorAll("input[type=color][disabled]").length;assertEqual(o,r,"When linking, any inputs on the base color should be disabled")}else assert(!n.getAttribute("linked-to-primary"),"New scale should not be linked to primary");assertEqual("exponential",n.getAttribute("scale-algorithm"),"New scale should use the primariy's algorithm");let t=n.querySelector("g-color-name");assertEqual(n.baseColorSwatch.id,t.getAttribute("color-swatch"),"Color name component should be linked to this new scale's base swatch"),n.swatches.forEach(o=>{o!=n.baseColorSwatch&&(assertEqual(o.getAttribute("derived-from"),n.baseColorSwatch.id,"New swatches should be derived from the base"),assertEqual(o.getAttribute("derivation-algorithm"),"brightness","New swatches should be derived vai brightness"))})},"assertNewScale");p("add-color-scale-random",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(ue),e(be),t("clicking the button adds a random color to the palette",({$button:i,$palette:a})=>{i.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0}));let l=a.querySelectorAll("g-palette-color-scale");s(3,l.length);let c=l[2];x(l[2],{linkedToPrimary:!1})}),t("clicking the button twice adds two random colors to the palette",({$button:i,$palette:a})=>{i.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0})),i.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0}));let l=a.querySelectorAll("g-palette-color-scale");s(4,l.length);let c=l[2],d=l[3];x(l[2],{linkedToPrimary:!1}),x(l[3],{linkedToPrimary:!1})})});p("add-color-scale-complement",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(ue),e(be),t("clicking the button adds a new scale linked as a complement to the primary",({$button:i,$palette:a})=>{i.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0}));let l=a.querySelectorAll("g-palette-color-scale");s(2,l.length),x(l[1],{linkedToPrimary:"complement"})}),t("clicking the button twice doesn't add a second scale linked as a complement to the primary",({$button:i,$palette:a})=>{i.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0})),i.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0}));let l=a.querySelectorAll("g-palette-color-scale");s(2,l.length),x(l[1],{linkedToPrimary:"complement"})})});var Ge=["split-complement","analogous","triad"];Ge.forEach(n=>{p(`add-color-scale-${n}`,({setup:e,teardown:t,test:o,subject:r,assert:s,assertEqual:i})=>{e(ue),t(be),o(`clicking the button adds two new scales linked as ${n}-upper and ${n}-lower to the primary`,({$button:a,$palette:l})=>{a.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0}));let c=l.querySelectorAll("g-palette-color-scale");i(3,c.length),x(c[1],{linkedToPrimary:`${n}-lower`}),x(c[2],{linkedToPrimary:`${n}-upper`})}),o("clicking the button twice doesn't add second scales",({$button:a,$palette:l})=>{a.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0})),a.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0}));let c=l.querySelectorAll("g-palette-color-scale");i(3,c.length),x(c[1],{linkedToPrimary:`${n}-lower`}),x(c[2],{linkedToPrimary:`${n}-upper`})}),o("if there is already a lower, it will only add the upper",({$button:a,$palette:l})=>{a.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0}));let c=l.querySelectorAll("g-palette-color-scale");i(3,c.length),c[2].removeAttribute("linked-to-primary"),a.dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0})),c=l.querySelectorAll("g-palette-color-scale"),i(4,c.length),x(c[1],{linkedToPrimary:`${n}-lower`}),x(c[2],{linkedToPrimary:!1}),x(c[3],{linkedToPrimary:`${n}-upper`})})})});var Ve=h(({require:n,clone:e,subject:t})=>{let o=e(t.children[0],"first child"),r=n(o.children[0],"first child of palette"),s=n(o.children[1],"second child of palette"),i=n(o.children[2],"third child of palette");return o.id=`test-case-${o.id}`,r.baseColorSwatch.id=`test-case-${r.baseColorSwatch.id}`,s.baseColorSwatch.id=`test-case-${s.baseColorSwatch.id}`,i.baseColorSwatch.id=`test-case-${i.baseColorSwatch.id}`,r.querySelector("g-color-name").setAttribute("color-swatch",r.baseColorSwatch.id),s.querySelector("g-color-name").setAttribute("color-swatch",s.baseColorSwatch.id),i.querySelector("g-color-name").setAttribute("color-swatch",i.baseColorSwatch.id),document.body.appendChild(o),{$palette:o,$primary:r,$linked:s,$unlinked:i}},"basicSetup"),qe=h(({$palette:n})=>{document.body.removeChild(n)},"basicTeardown");p("palette-events",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(Ve),e(qe),t("changing primary color sends a palette-change event",({$palette:i,$primary:a})=>{let l;i.addEventListener("palette-change",d=>{l=d});let c=a.querySelector("input[type=color]");c.value="#991234",c.dispatchEvent(new Event("change",{cancelable:!0,bubbles:!0})),r(l,"Expected the palette-change event to have been triggered")}),t("changing unlinked color sends a palette-change event",({$palette:i,$unlinked:a})=>{let l;i.addEventListener("palette-change",d=>{l=d});let c=a.querySelector("input[type=color]");c.value="#991234",c.dispatchEvent(new Event("change",{cancelable:!0,bubbles:!0})),r(l,"Expected the palette-change event to have been triggered")}),t("adding a linked color sends a palette-change event",({$palette:i})=>{let a;i.addEventListener("palette-change",l=>{a=l}),i.addScale({linkAlgorithm:"split-complement-upper"}),r(a,"Expected the palette-change event to have been triggered")}),t("adding an unlinked color sends a palette-change event",({$palette:i})=>{let a;i.addEventListener("palette-change",l=>{a=l}),i.addScale({hexCode:"#998812"}),r(a,"Expected the palette-change event to have been triggered")}),t("removing a color sends a palette-change event",({$palette:i})=>{let a;i.addEventListener("palette-change",c=>{a=c}),i.querySelectorAll("button[data-remove]")[1].dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0})),r(a,"Expected the palette-change event to have been triggered")}),t("unlinking a color sends a palette-change event",({$palette:i})=>{let a;i.addEventListener("palette-change",c=>{a=c}),i.querySelectorAll("button[data-unlink]")[1].dispatchEvent(new Event("click",{cancelable:!0,bubbles:!0})),r(a,"Expected the palette-change event to have been triggered")}),t("renaming a color sends a palette-change",({$palette:i})=>{let a;i.addEventListener("palette-change",u=>{a=u});let l=i.querySelectorAll("g-color-name input"),c=Math.floor(Math.random()*l.length),d=l[c];d.value="Bleorgh",d.dispatchEvent(new Event("change",{cancelable:!0,bubbles:!0})),r(a,`Expected the palette-change event to have been triggered from ${c}`)}),t("the palette's primary color info can be accessed when a name is not overridden",({$palette:i})=>{s("#600080",i.primaryColor.hexCode),s("Purple",i.primaryColor.colorName),r(!i.primaryColor.colorNameUserOverride)}),t("the palette's primary color info can be accessed when a name is overridden",({$palette:i})=>{i.querySelector("g-color-name").overrideColorName("Foo"),s("#600080",i.primaryColor.hexCode),s("Foo",i.primaryColor.colorName),r(i.primaryColor.colorNameUserOverride)}),t("the palette's non-primary colors' info can be accessed when a name is not overridden",({$palette:i})=>{let a=i.otherColors;s(2,a.length,"There should be two other colors"),s("complement",a[0].algorithm),s("Green",a[0].colorName),r(!a[0].colorNameUserOverride,"color name should not be overridden"),s("#881123",a[1].hexCode),s("Red",a[1].colorName),r(!a[1].colorNameUserOverride,"color name should not be overridden")}),t("the palette's non-primary colors' info can be accessed when a name is overridden",({$palette:i})=>{i.querySelectorAll("g-color-name").forEach((l,c)=>{l.overrideColorName(`Foo ${c}`)});let a=i.otherColors;s(2,a.length,"There should be two other colors"),s("complement",a[0].algorithm),s("Foo 1",a[0].colorName),r(a[0].colorNameUserOverride,"color name should be overridden"),s("#881123",a[1].hexCode),s("Foo 2",a[1].colorName),r(a[1].colorNameUserOverride,"color name should be overridden")})});p("preview-text-colors",({setup:n,teardown:e,test:t,subject:o,assert:r,assertEqual:s})=>{n(({subject:i,require:a,clone:l})=>{let c=l(i.children[0],"child");return document.body.appendChild(c),{$previewText:c}}),e(({$previewText:i})=>{document.body.removeChild(i)}),t("the attributes flow to the styles",({$previewText:i})=>{s("rgb(0, 0, 0)",i.style.backgroundColor),s("rgb(255, 255, 255)",i.style.color)}),t("removing the attributes sets reasonable defaults",({$previewText:i})=>{i.removeAttribute("background-color"),i.removeAttribute("text-color"),s("transparent",i.style.backgroundColor),s("currentcolor",i.style.color)})});document.addEventListener("DOMContentLoaded",()=>{H.define()});})();
//# sourceMappingURL=tests.js.map
