{
  "version": 3,
  "sources": ["../../node_modules/color-name/index.js", "../../node_modules/color-convert/conversions.js", "../../node_modules/color-convert/route.js", "../../node_modules/color-convert/index.js", "../../src/js/brutaldom/testing/testCases.js", "../../src/js/brutaldom/testing/TestFailure.js", "../../src/js/brutaldom/testing/ConfidenceCheckFailed.js", "../../src/js/brutaldom/testing/TestResult.js", "../../src/js/brutaldom/testing/TestCaseComponent.js", "../../src/js/brutaldom/TypeOf.js", "../../src/js/brutaldom/testing/Test.js", "../../src/js/brutaldom/testing/assertions/assert.js", "../../src/js/brutaldom/testing/assertions/assertNotEqual.js", "../../src/js/brutaldom/testing/assertions/assertEqual.js", "../../src/js/brutaldom/testing/TestCase.js", "../../src/js/brutaldom/testing/index.js", "../../src/js/Color.js", "../../src/js/NotValidHexCode.js", "../../src/js/components/ColorSwatchComponent.tests.js", "../../src/js/brutaldom/Logger.js", "../../src/js/brutaldom/RichString.js", "../../src/js/brutaldom/BaseCustomElement.js", "../../src/js/derivations/BaseDerivation.js", "../../src/js/derivations/BrightnessDerivation.js", "../../src/js/derivations/ComplementaryDerivation.js", "../../src/js/derivations/AnalogousDerivation.js", "../../src/js/derivations/SplitComplementaryDerivation.js", "../../src/js/derivations/TriadDerivation.js", "../../src/js/derivations/DerivationAlgorithm.js", "../../src/js/components/ColorSwatchComponent.js", "../../src/js/components/ColorNameComponent.js", "../../src/js/components/ColorNameComponent.tests.js", "../../src/js/components/PaletteColorScaleComponent.tests.js", "../../src/js/components/AddColorScaleButtonComponent.tests.js", "../../src/js/components/PaletteComponent.tests.js", "../../src/js/components/PreviewTextComponent.tests.js", "../../src/js/tests.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "export default testCases = {}\n", "export default class TestFailure extends Error {\n}\n", "export default class ConfidenceCheckFailed extends Error {\n}\n", "import TestFailure from \"./TestFailure\"\nimport ConfidenceCheckFailed from \"./ConfidenceCheckFailed\"\n\nexport default class TestResult {\n  constructor(test,numAssertions,errorOrFailure=null,errorOrFailureContext=null) {\n    this.test                  = test\n    this.numAssertions         = numAssertions\n    this.errorOrFailure        = errorOrFailure\n    this.errorOrFailureContext = errorOrFailureContext\n  }\n\n  get passed() { return !this.errorOrFailure }\n  get failed() { return this.errorOrFailure instanceof TestFailure }\n  get confidenceCheckFailed() { return this.errorOrFailure instanceof ConfidenceCheckFailed }\n  get errored() {\n    return !this.passed && !this.failed\n  }\n\n  get errorMessage() {\n    if (this.errorOrFailure) {\n      if (this.errorOrFailureContext) {\n        return this.errorOrFailure.message + ` (CONTEXT: ${this.errorOrFailureContext})`\n      }\n      else {\n        return this.errorOrFailure.message\n      }\n    }\n    else {\n      if (this.errorOrFailureContext) {\n        return this.errorOrFailureContext\n      }\n      else {\n        return \"NO ERROR MESSSAGE\"\n      }\n    }\n  }\n}\n", "import testCases from \"./testCases\"\nimport TestResult from \"./TestResult\"\n\nexport default class TestCaseComponent extends HTMLElement {\n  static observedAttributes = [\n    \"force-open\",\n  ]\n\n  static runTestCase(testCaseId, subject) {\n    const testCase = testCases[testCaseId]\n    if (testCase) {\n      return testCase.run(subject)\n    }\n    else {\n      return [\n        new TestResult({ description: \"locating the test\" },0,`No test case with id ${testCaseId}`)\n      ]\n    }\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name == \"force-open\") {\n      this.forceOpen = newValue == \"\"\n    }\n  }\n\n  connectedCallback() {\n    const subject = this.querySelector(\"g-test-case-subject\")\n    const details = this.querySelector(\"details\")\n    if (subject && this.id) {\n      const $p = this.querySelector(\"p\")\n      const description = $p ? $p.textContent.trim() : this.id\n      const formattedResults = this.constructor.runTestCase(this.id,subject).map( (result) => {\n        if (result.passed) {\n          return [\n            \"PASS\",\n            result.numAssertions,\n            result.test.description,\n            null,\n            null,\n          ]\n        }\n        else {\n          return [\n            result.failed ? \"FAIL\" : ( result.confidenceCheckFailed ? \"CONFIDENCE CHECK FAILED\" : \"ERROR\" ),\n            result.numAssertions,\n            result.test.description,\n            result.test.errorMessage,\n            result.errorOrFailure,\n          ]\n        }\n      })\n      if (formattedResults.some( (result) => result[0] != \"PASS\" )){\n        console.group(description)\n        if (details) {\n          details.setAttribute(\"open\",true)\n        }\n      }\n      else {\n        console.groupCollapsed(description)\n        if (details) {\n          details.removeAttribute(\"open\")\n        }\n      }\n      if (details && this.forceOpen) {\n        details.setAttribute(\"open\",true)\n      }\n      formattedResults.forEach( ([result,numAssertions,description,errorMessage,error]) => {\n        console.log(\"[%c%s] %c%s (%d assertions)%s  %o\",\n          result == \"PASS\" ? \"color: green;\" : \"color: red; font-weight: bold\",\n          result,\n          \"color: black; font-weight: normal\",\n          description,\n          numAssertions,\n          errorMessage ? ` ${errorMessage}` : \"\",\n          error\n        )\n      })\n      console.groupEnd()\n    }\n  }\n  static tagName = \"g-test-case\"\n  static define() {\n    customElements.define(this.tagName, TestCaseComponent);\n  }\n}\n\n", "/**\n * Given an object, attempts to return a string that names its type or class.\n *\n */\nclass TypeOf {\n  /**\n   * Get the type of the given value.  This will check if its a function, and use the name. If it has a constructor, it will use\n   * that constructor's name, otherwise it will use whatever typeof returns.  This will swallow any errors.\n   *\n   * @param {Object} value - anything\n   */\n  constructor(value) {\n    this.typeName = typeof value\n    if (value === null) {\n      this.typeName = \"null\"\n    }\n\n    try {\n      if ( ( (typeof value) === \"function\") && value.name ) {\n        this.typeName = value.name\n      }\n      else if (value && value.constructor && value.constructor.name) {\n        this.typeName = value.constructor.name\n      }\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  /** @returns {String} the string for the name of this type */\n  toString() { return this.typeName }\n\n  /** @returns the String of a value, skipping the need to create and hold onto an instance of this class */\n  static asString(value) {\n    return new TypeOf(value).toString()\n  }\n}\nexport default TypeOf\n", "export default class Test {\n  constructor(description,testCode) {\n    this.description = description\n    this.testCode = testCode\n  }\n}\n", "import TestFailure from \"../TestFailure\"\n\nexport default assert = (expr,context) => {\n  if (expr) {\n    return\n  }\n  throw new TestFailure(context)\n}\n", "import TestFailure from \"../TestFailure\"\n\nexport default assertNotEqual = (expected,got,context) => {\n  if (expected != got) {\n    return\n  }\n  const message = `${context}\\nDidn't expected '${expected}'\\nto equal     '${got}'`\n  throw new TestFailure(message)\n}\n\n", "import TypeOf from \"../../TypeOf\"\nimport TestFailure from \"../TestFailure\"\n\nexport default assertEqual = (expected,got,context) => {\n  if (expected == got) {\n    return\n  }\n  const message = `${context}\\nExpected '${expected}' (type: ${TypeOf.asString(expected)})\\nbut got   '${got}' (type: ${TypeOf.asString(got)})`\n  throw new TestFailure(message)\n}\n\n", "import TypeOf from \"../TypeOf\"\nimport Test from \"./Test\"\nimport TestResult from \"./TestResult\"\nimport TestAssertion from \"./TestAssertion\"\nimport TestError from \"./TestError\"\nimport TestFailure from \"./TestFailure\"\nimport ConfidenceCheckFailed from \"./ConfidenceCheckFailed\"\nimport assert from \"./assertions/assert\"\nimport assertNotEqual from \"./assertions/assertNotEqual\"\nimport assertEqual from \"./assertions/assertEqual\"\n\nconst test = (description,f) => {\n  return new TestAssertion(description,() => {\n    f()\n    return new TestError(\"No assertions\")\n  })\n}\n\nexport default class TestCase {\n  constructor(id,testCaseCode) {\n    this.id = id\n    this.testCaseCode = testCaseCode\n  }\n  run(subject) {\n    let setups = []\n    let teardowns = []\n\n    let confidenceChecks = []\n\n    const captureSetup = (f)           => { setups.push(f) }\n    const captureTeardown = (f)        => { teardowns.push(f) }\n    const captureConfidenceCheck = (f) => { confidenceChecks.push(f) }\n\n    let tests = []\n\n    const captureTest = (description,f) => {\n      tests.push(new Test(description,f))\n    }\n\n    let assertionsThisTest = 0\n    const capturingAssert = (f) => {\n      return (...args) => {\n        assertionsThisTest = assertionsThisTest + 1\n        return f(...args)\n      }\n    }\n\n    this.testCaseCode({\n      setup: captureSetup,\n      teardown: captureTeardown,\n      test: captureTest,\n      subject: subject,\n      assert: capturingAssert(assert),\n      assertEqual: capturingAssert(assertEqual),\n      assertNotEqual: capturingAssert(assertNotEqual),\n      confidenceCheck: captureConfidenceCheck,\n    })\n\n    const results = []\n\n    const require = (element,description,elementSearched) => {\n      if (!element) {\n        throw `Required element not found: ${description}${ elementSearched ? \"HTML: \" + elementSearched.outerHTML : '' }`\n      }\n      return element\n    }\n    const clone = (element,description) => {\n      const cloned = require(element,description).cloneNode(true)\n      cloned.dataset[\"testCaseId\"] = this.id\n      return cloned\n    }\n\n    tests.forEach( (test) => {\n      assertionsThisTest = 0\n      try {\n        let setupResults = {}\n        setups.forEach( (setup) => {\n          const results = setup({subject,require,clone,...setupResults})\n          setupResults = { ...results, ...setupResults }\n        })\n        try {\n          try {\n            confidenceChecks.forEach( (confidenceCheck) => {\n              confidenceCheck(setupResults)\n            })\n          } catch (e) {\n            throw new ConfidenceCheckFailed(e)\n          }\n          test.testCode(setupResults)\n          results.push(new TestResult(test,assertionsThisTest))\n        }\n        catch (e) {\n          results.push(new TestResult(test,assertionsThisTest,e))\n        }\n        try {\n          teardowns.forEach( (teardown) => {\n            teardown(setupResults)\n          })\n        }\n        catch (e) {\n          results.push(new TestResult(test,assertionsThisTest,e,\"from teardown()\"))\n        }\n      }\n      catch (e) {\n        results.push(new TestResult(test,assertionsThisTest,e,\"from setup()\"))\n      }\n    })\n    if (results.length == 0) {\n      results.push(new TestResult({description:\"\"},0,\"No tests\"))\n    }\n    return results\n  }\n}\n", "import TestCase from \"./TestCase\"\nimport testCases from \"./testCases\"\n\nconst testCase = (id,testCaseCode) => {\n  if (testCases[id]) {\n    throw `There is already a test with id '${id}'`\n  }\n  testCases[id] = new TestCase(id,testCaseCode)\n}\n\n\nexport {\n  testCase,\n}\n", "import colorConvert from \"color-convert\"\n\nimport NotValidHexCode from \"./NotValidHexCode\"\n\nclass Color {\n\n  static HEX_REGEXP = new RegExp(\"^(#)?([a-fA-F0-9]{6})$\")\n\n  static fromHexCode(hexCode, {onError = \"throw\" } = {}) {\n    if (hexCode) {\n      try {\n        return new Color(hexCode)\n      }\n      catch (e) {\n        if (e instanceof Error) {\n          if (onError == \"return\") {\n            return null\n          }\n        }\n        throw e\n      }\n    }\n    else {\n      return null\n    }\n  }\n\n  static fromHSL(h,s,l) {\n    return new Color(colorConvert.hsl.hex(h,s,l))\n  }\n\n  static fromRGB(r,g,b) {\n    return new Color(colorConvert.rgb.hex(parseInt(r),parseInt(g),parseInt(b)))\n  }\n\n  static random() {\n    return Color.fromRGB(\n      Math.floor(Math.random() * 256),\n      Math.floor(Math.random() * 256),\n      Math.floor(Math.random() * 256),\n    )\n  }\n\n  constructor(hexCodeAsString) {\n    if (!hexCodeAsString) {\n      throw new TypeError(\"Color must be given a hex code\")\n    }\n    const matches = hexCodeAsString.match(Color.HEX_REGEXP)\n    if (!matches) {\n      throw new NotValidHexCode(hexCodeAsString)\n    }\n    const [_matches, _hash, hexCode] = matches\n    this.hex = `#${hexCode}`.toUpperCase()\n  }\n\n  luminance() {\n    // https://www.w3.org/TR/WCAG21/#dfn-relative-luminance\n    const [r8Bit,g8Bit,b8Bit] = colorConvert.hex.rgb(this.hex)\n\n    const rsRGB = r8Bit / 255\n    const gsRGB = g8Bit / 255\n    const bsRGB = b8Bit / 255\n\n    const r = rsRGB < 0.04045 ? rsRGB / 12.92 : Math.pow( ((rsRGB+0.055)/1.055), 2.4)\n    const g = gsRGB < 0.04045 ? gsRGB / 12.92 : Math.pow( ((gsRGB+0.055)/1.055), 2.4)\n    const b = bsRGB < 0.04045 ? bsRGB / 12.92 : Math.pow( ((bsRGB+0.055)/1.055), 2.4)\n\n    return (0.2126 * r) + \n           (0.7152 * g) + \n           (0.0722 * b)\n  }\n\n  contrast(otherColor) {\n    // https://www.w3.org/TR/WCAG21/#dfn-contrast-ratio\n    let l1 = this.luminance()\n    let l2 = otherColor.luminance()\n\n    if (l1 < l2) {\n      const swap = l1\n      l1 = l2\n      l2 = swap\n    }\n\n    return (l1 + 0.05) / (l2 + 0.05)\n  }\n\n\n  hsl() {\n    return colorConvert.hex.hsl.raw(this.hex)\n  }\n\n  hexCode() {\n    return this.hex\n  }\n}\nexport default Color\n", "export default class NotValidHexCode extends Error {\n  constructor(hexCodeValue) {\n    super(`'${hexCodeValue}' is not a vaid hex code`)\n  }\n}\n", "import {\n  testCase,\n} from \"../brutaldom/testing\"\n\nimport Color from \"../Color\"\n\nconst singleDerivedSetup = ({subject,clone,require}) => {\n  const $derived = clone(subject.children[0],\"children[0]\")\n  const $main   = clone(subject.children[1],\"children[1]\")\n\n  const $derivedInput = require($derived.querySelector(\"input[type=color]\"),\"derived input\")\n  const $derivedLabel = require($derived.querySelector(\"label code\"),\"derived label's code\")\n  const $derivedLinkContext = $derived.querySelector(\"[data-link-context]\")\n\n  document.body.appendChild($main)\n  document.body.appendChild($derived)\n\n  $main.id = `test-case-${$main.id}`\n  $derived.id = `test-case-${$derived.id}`\n  $derived.setAttribute(\"derived-from\",$main.id)\n\n  return {\n    $derivedInput,\n    $derivedLabel,\n    $main,\n    $derived,\n    $derivedLinkContext,\n  }\n}\nconst singleDerivedTeardown = ({$main,$derived}) =>  {\n  document.body.removeChild($main)\n  document.body.removeChild($derived)\n}\n\n\ntestCase(\"derived-brighter-linear\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup( singleDerivedSetup )\n  teardown( singleDerivedTeardown )\n\n  test(\"manipulating the main causes the others to derive values\",\n    ({$main,$derived,$derivedInput,$derivedLabel}) => {\n      $main.setAttribute(\"hex-code\",\"#453888\")\n\n      assertEqual(\"#998ed1\",$derivedInput.value.toLowerCase(), \"Value should be derived via brightness algorithm\")\n      assertEqual(\"#998ed1\",$derivedLabel.textContent.toLowerCase(), \"Value should be derived via brightness algorithm\")\n    }\n  )\n})\ntestCase(\"derived-darker-linear\", ({setup,teardown,test,assert,assertEqual}) => {\n  setup( singleDerivedSetup )\n  teardown( singleDerivedTeardown )\n\n  test(\"manipulating the main causes the others to derive values\",\n    ({$main,$derived,$derivedInput,$derivedLabel}) => {\n      $main.setAttribute(\"hex-code\",\"#888555\")\n\n      assertEqual(\"#44432b\",$derivedInput.value.toLowerCase(), \"Value should be derived via brightness algorithm\")\n      assertEqual(\"#44432b\",$derivedLabel.textContent.toLowerCase(), \"Value should be derived via brightness algorithm\")\n    }\n  )\n})\n\ntestCase(\"derived-complement\", ({setup,teardown,test,assert,assertEqual,confidenceCheck}) => {\n  setup( singleDerivedSetup )\n  teardown( singleDerivedTeardown )\n  confidenceCheck( ({$derivedLinkContext}) => {\n    assert($derivedLinkContext,\"derivedLinkContext is required\")\n  })\n  test(\"manipulating the main causes the other to derive the complementary value\",\n    ({$main,$derived,$derivedInput,$derivedLabel,$derivedLinkContext}) => {\n      $main.setAttribute(\"hex-code\",\"#334488\")\n\n\n      assertEqual(\"#887733\",$derivedInput.value, \"Value should be derived via derived algorithm\")\n      assertEqual(\"#887733\",$derivedLabel.textContent,\"Value should be derived via derived algorithm\")\n      assertEqual(\"Complement\",$derivedLinkContext.textContent)\n    }\n  )\n})\n\nconst lowerUpperSetup = ({subject,clone,require}) => {\n  const $lower = clone(subject.children[0],\"children[0]\")\n  const $main  = clone(subject.children[1],\"children[1]\")\n  const $upper = clone(subject.children[2],\"children[2]\")\n\n  const $lowerInput       = require($lower.querySelector(\"input[type=color]\"),\"lower input\")\n  const $lowerLabel       = require($lower.querySelector(\"label code\"),\"lower label's code\")\n  const $lowerLinkContext = require($lower.querySelector(\"[data-link-context]\"),\"lower' link context\")\n  const $upperInput       = require($upper.querySelector(\"input[type=color]\"),\"upper input\")\n  const $upperLabel       = require($upper.querySelector(\"label code\"),\"upper label's code\")\n  const $upperLinkContext = require($upper.querySelector(\"[data-link-context]\"),\"upper's link context\")\n\n  document.body.appendChild($lower)\n  document.body.appendChild($main)\n  document.body.appendChild($upper)\n\n  $main.id = `test-case-${$main.id}`\n  $lower.id = `test-case-${$lower.id}`\n  $upper.id = `test-case-${$upper.id}`\n  $lower.setAttribute(\"derived-from\",$main.id)\n  $upper.setAttribute(\"derived-from\",$main.id)\n\n  return {\n    $lower,\n    $lowerInput,\n    $lowerLabel,\n    $lowerLinkContext,\n    $main,\n    $upper,\n    $upperInput,\n    $upperLabel,\n    $upperLinkContext,\n  }\n}\n\nconst lowerUpperTeardown = ({$lower,$main,$upper}) => {\n  document.body.removeChild($lower)\n  document.body.removeChild($main)\n  document.body.removeChild($upper)\n}\n\ntestCase(\"derived-split-complement\", ({setup,teardown,test,assert,assertEqual}) => {\n  setup( lowerUpperSetup )\n  teardown( lowerUpperTeardown )\n\n  test(\"manipulating the main causes the other to derive the complementary value\",\n    ({$main,$upperInput,$upperLabel,$upperLinkContext,$lowerInput,$lowerLabel,$lowerLinkContext}) => {\n      $main.setAttribute(\"hex-code\",\"#334488\")\n\n      assertEqual(\"#6E8833\",$lowerInput.value.toUpperCase(), \"Value should be derived via split complement lower algorithm\")\n      assertEqual(\"#6E8833\",$lowerLabel.textContent.toUpperCase(),\"Value should be derived via split complement lower algorithm\")\n      assertEqual(\"#884D33\",$upperInput.value.toUpperCase(), \"Value should be derived via split complement upper algorithm\")\n      assertEqual(\"#884D33\",$upperLabel.textContent.toUpperCase(),\"Value should be derived via split complement upper algorithm\")\n      assertEqual(\"Split Complement\",$upperLinkContext.textContent)\n      assertEqual(\"Split Complement\",$lowerLinkContext.textContent)\n    }\n  )\n})\n\ntestCase(\"derived-analogous\", ({setup,teardown,test,assert,assertEqual}) => {\n  setup( lowerUpperSetup )\n  teardown( lowerUpperTeardown )\n\n  test(\"manipulating the main causes the others to derive analogous values\",\n    ({$main,$upperInput,$upperLabel,$upperLinkContext,$lowerInput,$lowerLabel,$lowerLinkContext}) => {\n      $main.setAttribute(\"hex-code\",\"#334488\")\n\n      assertEqual(\"#4D3388\",$lowerInput.value.toUpperCase(), \"Value should be derived via analogous lower algorithm\")\n      assertEqual(\"#4D3388\",$lowerLabel.textContent.toUpperCase(),\"Value should be derived via analogous lower algorithm\")\n      assertEqual(\"#336E88\",$upperInput.value.toUpperCase(), \"Value should be derived via analogous upper algorithm\")\n      assertEqual(\"#336E88\",$upperLabel.textContent.toUpperCase(),\"Value should be derived via analogous upper algorithm\")\n      assertEqual(\"Analogous\",$upperLinkContext.textContent)\n      assertEqual(\"Analogous\",$lowerLinkContext.textContent)\n    }\n  )\n})\n\ntestCase(\"derived-triad\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup( lowerUpperSetup )\n  teardown( lowerUpperTeardown )\n\n  test(\"manipulating the main causes the others to derive triad values\",\n    ({$main,$upperInput,$upperLabel,$upperLinkContext,$lowerInput,$lowerLabel,$lowerLinkContext}) => {\n      $main.setAttribute(\"hex-code\",\"#334488\")\n\n      assertEqual(\"#448833\",$lowerInput.value, \"Value should be derived via triad lower algorithm\")\n      assertEqual(\"#448833\",$lowerLabel.textContent,\"Value should be derived via triad lower algorithm\")\n      assertEqual(\"#883344\",$upperInput.value, \"Value should be derived via triad upper algorithm\")\n      assertEqual(\"#883344\",$upperLabel.textContent,\"Value should be derived via triad upper algorithm\")\n      assertEqual(\"Triad\",$upperLinkContext.textContent)\n      assertEqual(\"Triad\",$lowerLinkContext.textContent)\n    }\n  )\n\n\n})\n\ntestCase(\"derived-disconnected\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup( lowerUpperSetup )\n  teardown( lowerUpperTeardown )\n\n  test(\"disconnecting one from the main stops updating and reverts the context to the default\",\n    ({$main,$upper,$upperInput,$upperLabel,$upperLinkContext,$lowerInput,$lowerLabel,$lowerLinkContext}) => {\n      $upper.setAttribute(\"default-link-context\",\"Rando\")\n      $upper.setAttribute(\"show-warnings\",\"upper\")\n      $upper.removeAttribute(\"derived-from\")\n      $upper.removeAttribute(\"derivation-algorithm\")\n      $upperInput.value = \"#123456\"\n      $upperInput.dispatchEvent(new Event(\"change\"))\n      $main.setAttribute(\"hex-code\",\"#334488\")\n\n      assertEqual(\"#448833\",$lowerInput.value, \"Value should be derived via triad lower algorithm\")\n      assertEqual(\"#123456\",$upperInput.value, \"Value should NOT be derived via triad upper algorithm\")\n      assertEqual(\"Rando\",$upperLinkContext.textContent,\"Swatch that's disconnected should show the default context\")\n      assertEqual(\"Triad\",$lowerLinkContext.textContent,\"Swatch that's not disconnected should show the derived context\")\n    }\n  )\n\n\n})\n\ntestCase(\"base-case\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup( ({clone,require}) => {\n\n    const component = clone(subject.children[0],\"first child\")\n\n    const $input       = require(component.querySelector(\"input[type=color]\"))\n    const $label       = require(component.querySelector(\"label\"))\n    const $linkContext = require(component.querySelector(\"[data-link-context]\"))\n\n    document.body.appendChild(component)\n    return {component,$input,$label,$linkContext}\n  })\n  teardown( ({component,}) => {\n    document.body.removeChild(component)\n  })\n  test(\"hex-code attribute should be copied to input value and set as label\", ({component,$input,$label}) => {\n    const hexCode = component.getAttribute(\"hex-code\")\n    const value = $input.value\n\n    assertEqual(hexCode, value,\"input's value should be set to the component's hex-code\")\n\n    const $code = $label.querySelector(\"code\")\n    assert($code,`Expected a <code> inside the label: ${$label.outerHTML}`)\n    assertEqual($code.textContent,hexCode,\"<code> should have textContent set to the hex code\")\n  })\n  test(\"when input is changed, the hex-code attribute is updated, as is the label\", ({component,$input,$label}) => {\n    const value = \"#123456\"\n    $input.value = value\n    $input.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }))\n\n    const hexCode = component.getAttribute(\"hex-code\")\n    assertEqual(value,hexCode,\"component's hex-code attribute should be set to input's value\")\n    const $code = $label.querySelector(\"code\")\n    assert($code,`Expected a <code> inside the label: ${$label.outerHTML}`)\n    assertEqual($code.textContent,value,\"<code> should have textContent set to the input's label\")\n  })\n  test(\"when link-context default is given, that is used if there is no other link context\",\n    ({component,$linkContext}) => {\n    component.setAttribute(\"default-link-context\",\"Primary\")\n\n    assertEqual(\"Primary\",$linkContext.textContent,\"link context should show the overridden value\")\n  })\n})\n\ntestCase(\"non-input-case\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup( ({clone,require}) => {\n    const component = clone(subject.children[0],\"children[0]\")\n    const $color = require(component.querySelector(\"[data-color]\"),\"data-color\")\n    const $hexcode = require(component.querySelector(\"[data-hexcode]\"),\"data-hexcode\")\n\n    document.body.appendChild(component)\n    return {component,$color,$hexcode}\n  })\n  teardown( ({component}) => {\n    document.body.removeChild(component)\n  })\n  test(\"hex-code attribute should be copied to [data-color] background color and set as label\", ({component,$color,$hexcode}) => {\n    const hexCode = component.getAttribute(\"hex-code\")\n    const value = $color.style.backgroundColor\n    const [_,r,g,b] = value.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/)\n\n    assert(!!_,`Expected style property to be rgb(r,g,b) but was '${value}'`)\n    const valueAsHex = Color.fromRGB(r,g,b).hexCode()\n\n    assertEqual(hexCode, valueAsHex,\"[data-color]'s backgroundColor should be set to the component's hex-code\")\n\n    const $code = $hexcode.querySelector(\"code\")\n    assert($code,`Expected a <code> inside the label: ${$hexcode.outerHTML}`)\n    assertEqual($code.textContent,hexCode,\"<code> should have textContent set to the hex code\")\n  })\n})\n\ntestCase(\"multiple\", ({setup,teardown,test,subject,assert,assertEqual,assertNotEqual}) => {\n  setup( () => {\n    const component = subject.children[0].cloneNode(true)\n    const $inputs = component.querySelectorAll(\"input[type=color]\")\n    const $otherInputs = component.querySelectorAll(\"input:not([type=color])\")\n    const $labels = component.querySelectorAll(\"label\")\n\n    if ($inputs.length < 2) { throw \"ERROR: Not at least 2 input[type=color]\" }\n    if ($otherInputs.length < 1) { throw \"ERROR: Not at least 1 input not color\" }\n    if ($labels.length < 2) { throw \"ERROR: Not at least 2 label\" }\n\n    const otherInputIds = Array.from($otherInputs).map( (element) => element.id )\n\n    document.body.appendChild(component)\n    return {\n      component,\n      $inputs,\n      $otherInputs,\n      $labels,\n      otherInputIds,\n    }\n  })\n  teardown( ({component}) => {\n    document.body.removeChild(component)\n  })\n  test(\"when one input is changed, it is reflected to all others as well as the hex-code attribute\",\n    ({component,$inputs,$otherInputs,$labels,otherInputIds}) => {\n      const value = \"#123456\"\n\n      $inputs[0].value = value\n      $inputs[0].dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }))\n\n      const hexCode = component.getAttribute(\"hex-code\")\n      assertEqual(value,hexCode,\"the component's hex-code attribute should've been given the input's value\")\n      $inputs.forEach( (input) => {\n        assertEqual(value,input.value,`Input's value should've been the one the user entered: ${input.outerHTML}`)\n      })\n      $otherInputs.forEach( (input) => {\n        assertEqual(value,input.value,`Non-color input's value should be set as well`)\n      })\n      $labels.forEach( (label) => {\n        const labelForOtherInput = otherInputIds.indexOf(label.htmlFor) != -1\n        if (labelForOtherInput) {\n          assert(String(label.textContent).indexOf(value) == -1,`labels for non-color inputs should not be changed: ${label.htmlFor}`)\n        }\n        else {\n          const $code = label.querySelector(\"code\")\n          assert($code,\"No <code> inside the label\")\n          assertEqual(value,$code.textContent,\"Label's <code> should have been given the value\")\n        }\n      })\n    }\n  )\n  test(\"the hex-code attribute will apply to all inputs and related labels\",\n    ({component,$inputs,$otherInputs,$labels,otherInputIds}) => {\n      const hexCode = component.getAttribute(\"hex-code\")\n      $inputs.forEach( (input) => {\n        assertEqual(hexCode,input.value,\"Color input's value should've been set to the hex-code\")\n      })\n      $otherInputs.forEach( (input) => {\n        assertEqual(hexCode,input.value,\"Non-color input's value should be set as well\")\n      })\n      $labels.forEach( (label) => {\n        const labelForOtherInput = otherInputIds.indexOf(label.htmlFor) != -1\n        if (labelForOtherInput) {\n          assert(String(label.textContent).indexOf(hexCode) == -1,`Other input's label should not contain the hex code ${label.outerHTML}`)\n        }\n        else {\n          const $code = label.querySelector(\"code\")\n          assert($code,\"label should have a <code> element\")\n          assertEqual(hexCode,$code.textContent,\"<code> element should have the hex code\")\n        }\n      })\n    }\n  )\n})\n", "class Logger {\n  static forPrefix(stringOrFalse) {\n    if (!stringOrFalse) {\n      return new BufferedLogger()\n    }\n    else {\n      return new PrefixedLogger(stringOrFalse)\n    }\n  }\n  log() {\n    throw `Subclass must implement`\n  }\n\n  info(...args) { this.log(\"info\",...args) }\n  warn(...args) { this.log(\"warn\",...args) }\n}\n\nclass BufferedLogger extends Logger {\n  constructor() {\n    super()\n    this.messages = []\n  }\n  log(...args) {\n    this.messages.push(args)\n  }\n}\n\nclass PrefixedLogger extends Logger {\n  constructor(prefixOrTrue) {\n    super()\n    this.prefix = prefixOrTrue === true ? \"debug\" : prefixOrTrue\n  }\n\n  dump(bufferedLogger) {\n    if (bufferedLogger instanceof BufferedLogger) {\n      bufferedLogger.messages.forEach( (args) => {\n        this.log(...args)\n      })\n    }\n  }\n\n  log(level,...args) {\n    if (typeof(args[0]) === \"string\") {\n      const message = `[prefix:${this.prefix}]:${args[0]}`\n      console[level](message,...(args.slice(1)))\n    }\n    else {\n      console[level](this.prefix,...args)\n    }\n  }\n}\nexport default Logger\n", "export default class RichString {\n  static fromString(possiblyDefinedStringOrRichString) {\n    if (possiblyDefinedStringOrRichString instanceof RichString) {\n      return possiblyDefinedStringOrRichString\n    }\n    if (!possiblyDefinedStringOrRichString) {\n      return null\n    }\n    return new RichString(String(possiblyDefinedStringOrRichString))\n  }\n\n  constructor(string) {\n    if (typeof string !== \"string\") {\n      throw `You may only construct a RichString with a String, not a ${typeof string}`\n    }\n    this.string = string\n  }\n\n  capitalize() {\n    return new RichString(this.string.charAt(0).toUpperCase() + this.string.slice(1))\n  }\n  decapitalize() {\n    return new RichString(this.string.charAt(0).toLowerCase() + this.string.slice(1))\n  }\n\n  camelize() {\n    // Taken from camelize npm module\n    return RichString.fromString(this.string.replace(/[_.-](\\w|$)/g, function (_, x) {\n      return x.toUpperCase()\n    }))\n  }\n\n  humanize() {\n    return this.decamlize({spacer: \" \"}).capitalize()\n  }\n\n  decamlize({spacer=\"_\"} = {}) {\n    // Taken from decamelize NPM module\n\n    // Checking the second character is done later on. Therefore process shorter strings here.\n    if (this.string.length < 2) {\n      return new RichString(this.string.toLowerCase())\n    }\n\n    const replacement = `$1${spacer}$2`\n\n    // Split lowercase sequences followed by uppercase character.\n    // `dataForUSACounties` \u2192 `data_For_USACounties`\n    // `myURLstring \u2192 `my_URLstring`\n    const decamelized = this.string.replace(\n      /([\\p{Lowercase_Letter}\\d])(\\p{Uppercase_Letter})/gu,\n      replacement,\n    )\n\n    // Split multiple uppercase characters followed by one or more lowercase characters.\n    // `my_URLstring` \u2192 `my_ur_lstring`\n    return new RichString(decamelized.\n      replace(\n        /(\\p{Uppercase_Letter})(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu,\n        replacement,\n      ).\n      toLowerCase()\n    )\n  }\n\n  toString() { return this.string }\n  toStringOrNull() {\n    if (this.string.trim() == \"\") {\n      return null\n    }\n    else {\n      return this.string\n    }\n  }\n\n}\n", "import Logger from \"../brutaldom/Logger\"\nimport RichString from \"../brutaldom/RichString\"\n\n/*\n * A base for autonomous custom elements that provides a few quality of life\n * improvements over building a custom element yourself.\n *\n * This element provides implementations for connectedCallback, attributeChangedCallback,\n * and disconnectedCallback (adoptedCallback is not defined as I have no idea when it is called \n * or what it is for and I have read the spec and I don't get it, but if you do, please reach out).\n * It also provides a static method named `define` that registers this element\n * with the CustomElementRegistry as returned by `customElements`.\n *\n * Features:\n *\n * * instead of implement attributeChangedCallback, you implement a method for each attribute\n *   you have specified in observedAttributes. You must declare observedAttributes in your class,\n *   but then provide `\u00ABattributeCamelCase\u00BBChangedCallBack`.  See attributeChangedCallback for details\n * * This class provides an attribute called `this.logger` to use in logging warnings.  By default,\n *   the warnings are not shown.  If your subclass as `show-warnings` in its `observedAttributes`\n *   then setting this value will show warnings in the console. The purpose of this is to allow a way\n *   to print to the console when an element isn't being used properly so when the element doesnt' do\n *   anything, you can figure out why in the console.  But, by default, nothing is printed because that's\n *   what elements do.\n * * Calls a method named `render` whenever needed. This method is implemented by you and is expected to\n *   do whatever is needed basd on the current state of the element.  For example, when an attribute is changed,\n *   that change presumably affects something inside your element, so `render` is called and you can update\n *   the element as needed.\n * * overrides disconnectedCallback to set a flag that the element is disconnected. This can be used\n *   to prevent taking actions that wouldn't make sense on a disconnected element.\n *\n *\n * Conventions:\n *\n * * A custom element has many different APIS:\n *   - The HTML attributes and their values\n *   - events they dispatch\n *   - internal state\n *   - methods called by the browser\n *   - private methods of this class that should not be called\n * * All HTML attributes' values are strings, but internal state doesn't have to store them that way\n * * Internal state should be implement as either attributes or via get\n * * APIs for setting internal state are discouraged - this should be done via attributes and events\n * * Methods called by the browser are implemented as defined (obviously\u2014they have to be)\n * * Private methods or data of this class that should not be called start with two underscores. Do not access, call, or change these.\n *\n */\nexport default class BaseCustomElement extends HTMLElement {\n  constructor() {\n    super()\n    this.logger = Logger.forPrefix(null)\n  }\n\n  static define() {\n    if (!this.tagName) {\n      throw `To use BaseCustomElement, you must define the static member tagName to return your custom tag's name`\n    }\n    customElements.define(this.tagName, this)\n  }\n\n  showWarningsChangedCallback({oldValue,newValue}) {\n    let oldLogger\n    if (!oldValue && newValue) {\n      oldLogger = this.logger\n    }\n    const prefix = newValue == \"\" ? this.id : newValue\n    this.logger = Logger.forPrefix(prefix)\n    if (oldLogger) {\n      this.logger.dump(oldLogger)\n    }\n  }\n\n  /*\n   * When called by the browser, calls a method you define based on the name of the attribute.\n   * Override this if you want to provide your own implementation, which you probably don't.\n   *\n   * Attribute names are assumed to be in kebab-case and are translated to camelCase to create a method name.\n   * That method is `\u00ABattributeInCamelCase\u00BBChangedCallback`, so if your attribute is `hex-code`,\n   * a method named `hexCodeChangedCallback` in invoked.  If no such method is defined, a\n   * warning is logged in the console, regardless of the `show-warnings` attribute.\n   *\n   * The method is invoked with `{oldValue,newValue}` - i.e. an object and not positional parameters. This \n   * means your implementation can omit any parameters it doesn't care about.\n   *\n   * The return value of the method is ignored.\n   *\n   * After your method is called, if there is a method named `render`, it is called with no arguments.\n   *\n   */\n  attributeChangedCallback(name,oldValue,newValue) {\n    const callbackName = `${new RichString(name).camelize()}ChangedCallback`\n    if (this[callbackName]) {\n      this[callbackName]({oldValue,newValue})\n    }\n    else if (this.constructor.observedAttributes.indexOf(name) != -1) {\n      console.warn(\"Observing %s but no method named %s was found to handle it\",name,callbackName)\n    }\n    this.__render()\n  }\n  \n  /** Sets a flag that the component was disconnected, clears the connected flag ,if set, and\n   * calls `onDisconnected` if that method is defined.\n   * Override this to opt-out of this behavior.\n   */\n  disconnectedCallback() {\n    this.__disconnected = true\n    this.__connected = false\n    if (this.onDisconnected) {\n      this.onDisconnected()\n    }\n  }\n\n  /**\n   * Sets a flag that the component has connected and clears the disconnected flag, if set.\n   * If onConnected() is defined, that method is called.  If render() is defined, that method is called as well.\n   */\n  connectedCallback() {\n    this.__connected = true\n    this.__disconnected = false\n    if (this.onConnected) {\n      this.onConnected()\n    }\n    this.__render()\n  }\n\n  get isConnected() { return !!this.__connected }\n\n  __render() {\n    if (this.__disconnected) {\n      return\n    }\n    if (this.render) {\n      this.render()\n    }\n  }\n}\n", "import Color from \"../Color\"\n\nexport default class BaseDerivation {\n  hsl(hexCode) {\n    return Color.fromHexCode(hexCode).hsl()\n  }\n\n  hexCode(h,s,l) {\n    return Color.fromHSL(h,s,l).hexCode()\n  }\n}\n", "import BaseDerivation from \"./BaseDerivation\"\n\nexport default class BrightnessDerivation extends BaseDerivation {\n  derive(hexCode, options={}) {\n    if (options.darken && !isNaN(options.darken)) {\n      return this.darken(hexCode,options.darken)\n    }\n    else if (options.brighten && !isNaN(options.brighten)) {\n      return this.brighten(hexCode,options.brighten)\n    }\n    else {\n      return hexCode\n    }\n  }\n\n  darken(hexCode,darken) {\n    const [h,s,l] = this.hsl(hexCode)\n\n    const distance = l\n    const percent = darken / 100\n    const decrease = distance * percent\n    const newL = l - decrease\n    return this.hexCode(h,s,newL)\n  }\n\n  brighten(hexCode,brighten) {\n    const [h,s,l] = this.hsl(hexCode)\n\n    const distance = 100 - l\n    const percent = brighten / 100\n    const increase = distance * percent\n    const newL = l + increase\n    return this.hexCode(h,s,newL)\n  }\n}\n", "import BaseDerivation from \"./BaseDerivation\"\n\nexport default class ComplementaryDerivation extends BaseDerivation {\n  derive(hexCode,options={}) {\n    const [h,s,l] = this.hsl(hexCode)\n    const newH = (h + 180) % 360\n    return this.hexCode(newH,s,l)\n  }\n  get humanName() { return \"Complement\" }\n}\n", "import BaseDerivation from \"./BaseDerivation\"\n\nclass AnalogousUpperDerivation extends BaseDerivation {\n  derive(hexCode,options={}) {\n    const [h,s,l] = this.hsl(hexCode)\n    const newH = (h + 330)  % 360\n\n    return this.hexCode(newH,s,l)\n  }\n  get humanName() { return \"Analogous\" }\n}\n\nclass AnalogousLowerDerivation extends BaseDerivation {\n  derive(hexCode,options={}) {\n    const [h,s,l] = this.hsl(hexCode)\n    const newH = (h + 30)  % 360\n\n    return this.hexCode(newH,s,l)\n  }\n  get humanName() { return \"Analogous\" }\n}\nexport {\n  AnalogousLowerDerivation,\n  AnalogousUpperDerivation,\n}\n", "import BaseDerivation from \"./BaseDerivation\"\nimport ComplementaryDerivation from \"./ComplementaryDerivation\"\nimport { AnalogousUpperDerivation, AnalogousLowerDerivation } from \"./AnalogousDerivation\"\n\nclass SplitComplementaryUpperDerivation extends BaseDerivation {\n  constructor() {\n    super()\n    this.complementary = new ComplementaryDerivation()\n    this.analogousUpper = new AnalogousUpperDerivation()\n  }\n\n  derive(hexCode,options={}) {\n    return this.analogousUpper.derive(this.complementary.derive(hexCode))\n  }\n  get humanName() { return \"Split Complement\" }\n}\n\nclass SplitComplementaryLowerDerivation extends BaseDerivation {\n  constructor() {\n    super()\n    this.complementary = new ComplementaryDerivation()\n    this.analogousLower = new AnalogousLowerDerivation()\n  }\n\n  derive(hexCode,options={}) {\n    return this.analogousLower.derive(this.complementary.derive(hexCode))\n  }\n  get humanName() { return \"Split Complement\" }\n}\nexport {\n  SplitComplementaryLowerDerivation,\n  SplitComplementaryUpperDerivation,\n}\n", "import BaseDerivation from \"./BaseDerivation\"\n\nclass TriadUpperDerivation extends BaseDerivation {\n  derive(hexCode,options={}) {\n    const [h,s,l] = this.hsl(hexCode)\n    const newH = (h + 120)  % 360\n\n    return this.hexCode(newH,s,l)\n  }\n  get humanName() { return \"Triad\" }\n}\n\nclass TriadLowerDerivation extends BaseDerivation {\n  derive(hexCode,options={}) {\n    const [h,s,l] = this.hsl(hexCode)\n    const newH = (h + 240)  % 360\n\n    return this.hexCode(newH,s,l)\n  }\n  get humanName() { return \"Triad\" }\n}\nexport {\n  TriadLowerDerivation,\n  TriadUpperDerivation,\n}\n", "import BrightnessDerivation from \"./BrightnessDerivation\"\nimport ComplementaryDerivation from \"./ComplementaryDerivation\"\nimport {\n  SplitComplementaryUpperDerivation,\n  SplitComplementaryLowerDerivation,\n} from \"./SplitComplementaryDerivation\"\nimport {\n  AnalogousUpperDerivation,\n  AnalogousLowerDerivation,\n} from \"./AnalogousDerivation\"\nimport {\n  TriadUpperDerivation,\n  TriadLowerDerivation,\n} from \"./TriadDerivation\"\n\nexport default class DerivationAlgorithm {\n  static fromString(string, { throwOnUnknown=false } = {}) {\n    if (string instanceof DerivationAlgorithm) {\n      return string\n    }\n    else if (string == \"brightness\") {\n      return new BrightnessDerivation()\n    }\n    else if (string == \"complement\") {\n      return new ComplementaryDerivation()\n    }\n    else if (string == \"split-complement-lower\") {\n      return new SplitComplementaryLowerDerivation()\n    }\n    else if (string == \"split-complement-upper\") {\n      return new SplitComplementaryUpperDerivation()\n    }\n    else if (string == \"analogous-lower\") {\n      return new AnalogousLowerDerivation()\n    }\n    else if (string == \"analogous-upper\") {\n      return new AnalogousUpperDerivation()\n    }\n    else if (string == \"triad-lower\") {\n      return new TriadLowerDerivation()\n    }\n    else if (string == \"triad-upper\") {\n      return new TriadUpperDerivation()\n    }\n    else {\n      if (throwOnUnknown) {\n        throw `No such DerivationAlgorithm '${string}'`\n      }\n      else {\n        return null\n      }\n    }\n  }\n}\n", "import BaseCustomElement from \"../brutaldom/BaseCustomElement\"\nimport DerivationAlgorithm from \"../derivations/DerivationAlgorithm\"\n\nexport default class ColorSwatchComponent extends BaseCustomElement {\n\n  static tagName = \"g-color-swatch\"\n  static observedAttributes = [\n    \"hex-code\",\n    \"derived-from\",\n    \"derivation-algorithm\",\n    \"darken-by\",\n    \"brighten-by\",\n    \"show-warnings\",\n    \"default-link-context\",\n  ]\n\n  constructor() {\n    super()\n    this.onInputChangeCallback = (event) => {\n      this.setAttribute(\"hex-code\",event.target.value)\n    }\n    this.onDerivedElementChangeCallback = (event) => {\n      if (event.target != this.derivedFromElement) {\n        this.logger.warn(\"Got an event from not our derived\")\n      }\n      this._deriveHexCodeFromSwatch(event.target)\n    }\n    this.derivationAlgorithm = DerivationAlgorithm.fromString(\"brightness\", { throwOnUnknown: true })\n  }\n\n  hexCodeChangedCallback({newValue}) {\n    this.hexCode = newValue\n    this._dispatchHexcodeChanged()\n  }\n\n  derivedFromChangedCallback({newValue}) {\n    if (this.derivedFromElement) {\n      this.derivedFromElement.removeEventListener(this.hexCodeChangedEventName,this.onDerivedElementChangeCallback)\n    }\n    this.derivedFromId = newValue\n  }\n\n  defaultLinkContextChangedCallback({newValue}) {\n    this.defaultLinkContext = newValue\n  }\n\n  darkenByChangedCallback({newValue}) {\n    this.darkenBy = newValue\n    this._updateDerivationifNeeded({ whenHexCodeExists: true })\n  }\n\n  brightenByChangedCallback({newValue}) {\n    this.brightenBy = newValue\n    this._updateDerivationifNeeded({ whenHexCodeExists: true })\n  }\n\n  derivationAlgorithmChangedCallback({newValue}) {\n    this.derivationAlgorithm = DerivationAlgorithm.fromString(newValue)\n    if (this.derivationAlgorithm) {\n      this._updateDerivationifNeeded({ whenHexCodeExists: true })\n    }\n    else if (!!newValue) {\n      this.logger.warn(\"derivation-algorithm '%s' is not valid\",newValue)\n    }\n  }\n\n  _eachInput(f) {\n    const elements = this.querySelectorAll(\"input\")\n    elements.forEach(f)\n    return elements.length\n  }\n  _eachDataColor(f) {\n    const elements = this.querySelectorAll(\"[data-color]\")\n    elements.forEach(f)\n    return elements.length\n  }\n\n  _eachCodeElementInsideRelevantLabel(f) {\n    this.querySelectorAll(\"label\").forEach( (label) => {\n      let input\n      if (label.htmlFor) {\n        input = this.querySelector(`[id=${label.htmlFor}][type=color]`)\n      }\n      else {\n        input = label.querySelector(\"input[type=color]\")\n      }\n      if (input) {\n        let code = label.querySelector(\"code\")\n        if (!code) {\n          code = document.createElement(\"code\")\n          label.appendChild(code)\n        }\n        f(code)\n      }\n      else {\n        this.logger.warn(`Orphaned label inside the element does not wrap nor reference a color input inside the element: %o`,label)\n      }\n    })\n    this.querySelectorAll(\"[data-hexcode]\").forEach( (hexCode) => {\n      let code = hexCode.querySelector(\"code\")\n      if (!code) {\n        code = document.createElement(\"code\")\n        hexCode.appendChild(code)\n      }\n      f(code)\n    })\n  }\n\n  render() {\n    const numInputs = this._eachInput( (element) => {\n      element.value = this.hexCode\n      element.addEventListener(\"change\", this.onInputChangeCallback)\n      const disabled = element.getAttributeNames().indexOf(\"disabled\") != -1\n      if (!disabled) {\n        if (this.derivedFromId) {\n          this.logger.warn(\"derived-from-id is set, but an enabled input was detected: %o\",element)\n        }\n      }\n    })\n    const numDataColors = this._eachDataColor( (element) => {\n      element.style.backgroundColor = this.hexCode\n    })\n\n    if ( (numDataColors == 0) && (numInputs == 0) ) {\n      this.logger.warn(\"There were no <input type=color> nor [data-color] elements found\")\n    }\n    this._eachLinkContext( (element) => {\n      if (this.defaultLinkContext) {\n        element.textContent = this.defaultLinkContext\n      }\n      else {\n        element.innerHTML = \"&nbsp;\" \n      }\n    })\n    if (this.derivedFromId) {\n      this._updateDerivationifNeeded({ whenHexCodeExists: false })\n    }\n    if (this.hexCode) {\n      this._eachCodeElementInsideRelevantLabel( (codeElement) => {\n        codeElement.textContent = this.hexCode\n      })\n    }\n    else {\n      this._eachCodeElementInsideRelevantLabel( (codeElement) => {\n        codeElement.textContent = \"\"\n      })\n    }\n  }\n\n  _deriveHexCodeFromSwatch(element) {\n    let hexCode = element.hexCode\n    if (hexCode) {\n      this._deriveHexCodeFrom(hexCode)\n    }\n    else {\n      this.logger.warn(\"No hexcode on the derived element: %o\",event.target)\n      this.removeAttribute(\"hex-code\")\n    }\n  }\n\n  _deriveHexCodeFrom(hexCode) {\n\n    const darken   = this.darkenBy ? parseInt(this.darkenBy) : null\n    const brighten = this.brightenBy ? parseInt(this.brightenBy) : null\n\n    if (this.derivationAlgorithm) {\n      hexCode = this.derivationAlgorithm.derive(hexCode,{darken: darken, brighten: brighten})\n    }\n    this.setAttribute(\"hex-code\",hexCode)\n  }\n\n  _eachLinkContext(f) {\n    this.querySelectorAll(\"[data-link-context]\").forEach(f)\n  }\n\n  get derivedFromElement() {\n    return document.getElementById(this.derivedFromId)\n  }\n\n  _updateDerivationifNeeded({whenHexCodeExists}) {\n    const derivedFromElement = this.derivedFromElement\n    const hexCodeExists = !!this.hexCode\n\n    if (derivedFromElement) {\n      if (derivedFromElement.tagName.toLowerCase() == this.constructor.tagName) {\n        derivedFromElement.addEventListener(this.hexCodeChangedEventName,this.onDerivedElementChangeCallback)\n        if ( (derivedFromElement.hexCode) && (whenHexCodeExists == hexCodeExists) ) {\n          this._deriveHexCodeFrom(derivedFromElement.hexCode)\n        }\n        this._eachLinkContext( (element) => element.textContent = this.derivationAlgorithm.humanName )\n      }\n      else {\n        this.logger.warn(\"Derived element has id '%s', but this is a %s, not a %s\",this.derivedFromId,derivedFromElement.tagName,this.constructor.tagName)\n      }\n    }\n  }\n\n  get hexCodeChangedEventName() { return \"hex-code-change\" }\n\n  _dispatchHexcodeChanged() {\n    this.dispatchEvent(new CustomEvent(this.hexCodeChangedEventName, { cancelable: false, bubbles: true }))\n  }\n\n\n  get forTesting() {\n    return {\n      dispatchHexCodeChanged: () => {\n        this._dispatchHexcodeChanged()\n      }\n    }\n  }\n}\n", "import BaseCustomElement from \"../brutaldom/BaseCustomElement\"\nimport Color from \"../Color\"\n\nexport default class ColorNameComponent extends BaseCustomElement {\n\n  static tagName = \"g-color-name\"\n  static observedAttributes = [\n    \"color-swatch\",\n    \"show-warnings\",\n  ]\n\n  static NAMES_BASED_ON_HUE = [\n    [ \"Red\"    , [ 0   , 21  ] ] ,\n    [ \"Orange\" , [ 21  , 41  ] ] ,\n    [ \"Yellow\" , [ 41  , 74  ] ] ,\n    [ \"Green\"  , [ 74  , 167 ] ] ,\n    [ \"Blue\"   , [ 167 , 259 ] ] ,\n    [ \"Purple\" , [ 259 , 333 ] ] ,\n    [ \"Red\"    , [ 333 , 360 ] ] ,\n  ]\n\n\n  constructor() {\n    super()\n    this.updateNameEventListener = () => {\n      this.render()\n    }\n    this.inputChangeListener = (event) => {\n      const value = event.target.value\n      if (value && String(value).trim() != \"\") {\n        event.target.dataset.userOverride = true\n        this.dispatchEvent(new CustomEvent(\"name-change\", { cancelable: false, bubbles: true }))\n      }\n      else {\n        delete event.target.dataset.userOverride\n        this.dispatchEvent(new CustomEvent(\"name-cleared\", { cancelable: false, bubbles: true }))\n      }\n      this.render()\n    }\n  }\n\n  onDisconnected() {\n    if (this.colorSwatch) {\n      this.colorSwatch.removeEventListener(\"hex-code-change\",this.updateNameEventListener)\n    }\n    if (this.input) {\n      this.input.removeEventListener(\"change\",this.inputChangeListener)\n    }\n  }\n\n  colorSwatchChangedCallback({newValue}) {\n    const component = document.getElementById(newValue)\n    if (component != this.colorSwatch) {\n      if (this.colorSwatch) {\n        this.colorSwatch.removeEventListener(\"hex-code-change\",this.updateNameEventListener)\n      }\n      if (component) {\n        this.updateNameEventListener.id = `listener-${this.id}`\n        component.addEventListener(\"hex-code-change\",this.updateNameEventListener)\n      }\n    }\n    this.colorSwatch = component\n  }\n\n  _input() {\n    const inputs = this.querySelectorAll(\"input[type=text]\")\n    if (inputs.length > 1) {\n      this.logger.warn(\"There is more than one input - only the first one found will be used\")\n    }\n    return inputs[0]\n  }\n\n  render() {\n    const input = this._input()\n    if (this.input != input) {\n      if (this.input) {\n        this.input.removeEventListener(\"change\",this.inputChangeListener)\n      }\n      if (input) {\n        input.addEventListener(\"change\",this.inputChangeListener)\n      }\n      this.input = input\n    }\n\n    if (input && !input.dataset.userOverride) {\n      if (this.colorSwatch && this.colorSwatch.hexCode) {\n        input.value = this._name(this.colorSwatch.hexCode)\n      }\n    }\n  }\n\n  get name() {\n    const input = this._input()\n    if (input) {\n      return input.value\n    }\n    else {\n      return null\n    }\n\n  }\n\n  get userOverride() {\n    const input = this._input()\n    if (input) {\n      return input.dataset.userOverride\n    }\n    else {\n      return false\n    }\n  }\n\n  overrideColorName(newName) {\n    const input = this._input()\n    if (input) {\n      input.dataset.userOverride = true\n      input.value = newName\n    }\n  }\n  restoreDefaultColorName() {\n    const input = this._input()\n    if (input) {\n      delete input.dataset.userOverride\n      input.value = \"\"\n      this.render()\n    }\n  }\n\n\n  _name(hexCode) {\n    const [hue,saturation,l] = Color.fromHexCode(hexCode).hsl()\n    if (isNaN(hue) || (saturation == 0)) {\n      return \"Gray\"\n    }\n    const nameEntry = this.constructor.NAMES_BASED_ON_HUE.find( ([name,[low,high]]) => {\n      if ((hue >= low) && (hue <= high)) {\n        return true\n      }\n    })\n    if (!nameEntry) {\n      throw `Something is wrong: ${hexCode}'s hue of '${hue}' was not in namesBasedOnHue`\n    }\n    return nameEntry[0]\n  }\n}\n", "import {\n  testCase,\n} from \"../brutaldom/testing\"\n\nimport ColorSwatchComponent from \"./ColorSwatchComponent\"\nimport ColorNameComponent from \"./ColorNameComponent\"\n\nconst basicSetup = ({require,clone,subject}) => {\n  const $colorName = clone(subject.querySelector(ColorNameComponent.tagName),\"text input\")\n  const $swatch = clone(subject.querySelector(ColorSwatchComponent.tagName),\"text input\")\n  const $input = require($colorName.querySelector(\"input[type=text]\"),\"text input\")\n\n  $swatch.id = `test-case-${$swatch.id}`\n  $colorName.id = `test-case${$colorName.id}`\n\n  document.body.appendChild($colorName)\n  document.body.appendChild($swatch)\n\n  $colorName.setAttribute(\"color-swatch\",$swatch.id)\n\n    return { $colorName, $input, $swatch }\n}\n\nconst basicTeardown = ({$colorName,$swatch}) => {\n  document.body.removeChild($colorName)\n  document.body.removeChild($swatch)\n}\n\ntestCase(\"name-derived-from-color-input\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup(basicSetup)\n  teardown(basicTeardown)\n\n  test(\"by default, the input's value is the broad category name of the color\",\n    ({$colorName,$input,$swatch}) => {\n      $swatch.setAttribute(\"hex-code\",\"#ff0000\")\n      $swatch.forTesting.dispatchHexCodeChanged()\n\n      assertEqual(\"Red\",$input.value,\"<input>'s value should be Red\")\n      assertEqual(\"Red\",$colorName.name,\"The name attribute should return the value\")\n      assert(!$colorName.userOverride,\"Since the value is the default, userOverride should be false\")\n    }\n  )\n\n  test(\"if the swatch's value changes, the input's value is updated\",\n    ({$colorName,$input,$swatch}) => {\n      $swatch.setAttribute(\"hex-code\",\"#ff0000\")\n      $swatch.forTesting.dispatchHexCodeChanged()\n      $swatch.setAttribute(\"hex-code\",\"#00ff00\")\n      $swatch.forTesting.dispatchHexCodeChanged()\n\n      assertEqual(\"Green\",$input.value,\"<input>'s value should be Green\")\n      assertEqual(\"Green\",$colorName.name,\"The name attribute should return the value\")\n      assert(!$colorName.userOverride,\"Since the value is the default, userOverride should be false\")\n    }\n  )\n  test(\"if the user has changed the input, a data- attribute is set, an event fired, and changes to the swatch are ignored\",\n    ({$colorName,$input,$swatch}) => {\n      let eventReceived\n      $colorName.addEventListener(\"name-change\", (event) => {\n        eventReceived = event\n      })\n\n      $swatch.setAttribute(\"hex-code\",\"#ff0000\")\n      $swatch.forTesting.dispatchHexCodeChanged()\n\n      const override = \"Maroon-esque\"\n      $input.value = override\n      $input.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }))\n\n      $swatch.setAttribute(\"hex-code\",\"#00ff00\")\n      $swatch.forTesting.dispatchHexCodeChanged()\n\n      assertEqual(override,$input.value,\"<input>'s value should be the same as what the user input\")\n      assert($input.dataset.userOverride,\"<input> should have data-user-override set to allow detection of this situation\")\n      assertEqual(override,$colorName.name,\"The name attribute should return the value\")\n      assert($colorName.userOverride,\"Since the user has overridden the value, userOverride should be true\")\n      assert(eventReceived,\"An event should've been received\")\n    }\n  )\n  test(\"if the user has changed the input, then clears it, the name should be restored to the swatch's default\",\n    ({$colorName,$input,$swatch}) => {\n      $swatch.setAttribute(\"hex-code\",\"#ff0000\")\n      $swatch.forTesting.dispatchHexCodeChanged()\n\n      const override = \"Maroon-esque\"\n      $input.value = override\n      $input.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }))\n\n      $swatch.setAttribute(\"hex-code\",\"#00ff00\")\n      $swatch.forTesting.dispatchHexCodeChanged()\n\n      let eventReceived\n      $colorName.addEventListener(\"name-cleared\", (event) => {\n        eventReceived = event\n      })\n\n      $input.value = \"\"\n      $input.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true }))\n\n      assertEqual(\"Green\",$input.value,\"<input>'s value should revert to the element's default\")\n      assert(!$input.dataset.userOverride,\"<input> should not have data-user-override set\")\n      assert(eventReceived,\"An event should've been received\")\n    }\n  )\n})\n\ntestCase(\"name-override-via-method-color-input\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup(basicSetup)\n  teardown(basicTeardown)\n  test(\"the value should be the overridden value from the attribute\",\n    ({$colorName,$input,$swatch}) => {\n      $swatch.setAttribute(\"hex-code\",\"#ff0000\")\n      $swatch.forTesting.dispatchHexCodeChanged()\n      $colorName.overrideColorName(\"Puce\")\n\n      assertEqual(\"Puce\",$input.value,\"<input>'s value should what was provided in the attribute\")\n      assert($input.dataset.userOverride,\"<input> should have data-user-override set to allow detection of this situation\")\n    }\n  )\n})\n", "import {\n  testCase,\n} from \"../brutaldom/testing\"\n\nconst basicSetup = (locatePaletteColor) => {\n  return ({subject,require,clone}) => {\n    const $paletteColor  = locatePaletteColor({subject,require,clone})\n    const $previewButton = require($paletteColor.querySelector(\"[data-preview]\"),\"[data-preview] button\")\n    const $unlinkButton  = require($paletteColor.querySelector(\"[data-unlink]\"),\"[data-unlink] button\")\n    const $removeButton  = require($paletteColor.querySelector(\"[data-remove]\"),\"[data-remove] button\")\n\n    /* Given we have cloned the entire thing:\n     * 1 - we have to change any relevant ids\n     * 2 - we have to clear any attributes the component may have set before the clone\n     */\n\n    // ID to set in ourselves\n    const uniqueId = `palette-color-scale-${crypto.randomUUID()}`\n    $paletteColor.id = `test-case-${uniqueId}`\n\n    const container = document.createElement(\"div\")\n    container.appendChild($paletteColor)\n\n    document.body.appendChild(container)\n\n    $paletteColor.querySelectorAll(\"g-color-swatch\").forEach( (e) => {\n      // If we have an id, don't clear it, but change it to be unique\n      if (e.id) {\n        e.id = `test-case-${e.id}`\n      }\n      // Remove these attributes as the component will set them\n      e.removeAttribute(\"derived-from\")\n      e.removeAttribute(\"darken-by\")\n      e.removeAttribute(\"brighten-by\")\n    })\n    // Remove this so we can set it later to trigger needed behavior\n    $paletteColor.removeAttribute(\"scale-algorithm\")\n\n    return {\n      container,\n      $paletteColor,\n      $previewButton,\n      $unlinkButton,\n      $removeButton,\n    }\n  }\n}\n\nconst setupBasedOnFirstChild = basicSetup( ({subject,clone}) => clone(subject.children[0],\"children[0]\") )\n\nconst teardownAdded = ({container}) => {\n  try {\n    document.body.removeChild(container)\n  }\n  catch (e) {\n    if ( (e instanceof DOMException) && e.name == \"NotFoundError\") {\n      console.debug(\"Ignoring %o\",e)\n    }\n    else {\n      throw e\n    }\n  }\n}\n\ntestCase(\"primary-color\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup(setupBasedOnFirstChild)\n  teardown(teardownAdded)\n\n  test(\"preview is enabled, but unlink and remove are not\",\n    ({ $previewButton, $unlinkButton, $removeButton }) => {\n\n      assert(!$previewButton.getAttribute(\"disabled\"), \"Expected preview button to be enabled\")\n      assert( $unlinkButton.getAttribute(\"disabled\"), \"Expected unlink button to be disabled\")\n      assert( $removeButton.getAttribute(\"disabled\"), \"Expected remove button to be disabled\")\n    }\n  )\n\n  test(\"Relevant data is exposed: current color, user override, scale, and base swatch\",\n    ({ $paletteColor }) => {\n\n      $paletteColor.setAttribute(\"scale-algorithm\", \"linear\")\n\n      assertEqual(\"Purple\",$paletteColor.colorName, \"Color name should reflect the value in the color name field\")\n      assert(!$paletteColor.colorNameUserOverride, \"Color name is not user defined when using the default\")\n      assertEqual(\"#140826\",$paletteColor.colorScale[0].toUpperCase(),\"The first color in the scale when using exp should be the darkest\")\n      assertEqual(\"#28104C\",$paletteColor.colorScale[1].toUpperCase(),\"The second color in the scale when using exp should be the darker\")\n      assertEqual(\"#3C1971\",$paletteColor.colorScale[2].toUpperCase(),\"The third color in the scale when using exp should be the dark\")\n      assertEqual(\"#6429BD\",$paletteColor.colorScale[3].toUpperCase(),\"The fourth color in the scale when using exp should be the base\")\n      assertEqual(\"#905EDC\",$paletteColor.colorScale[4].toUpperCase(),\"The fifth color in the scale when using exp should be the bright\")\n      assertEqual(\"#C0A3EB\",$paletteColor.colorScale[5].toUpperCase(),\"The sixth color in the scale when using exp should be the brighter\")\n      assertEqual(\"#EFE8FA\",$paletteColor.colorScale[6].toUpperCase(),\"The seventh color in the scale when using exp should be the brightest\")\n      assertEqual($paletteColor.querySelectorAll(\"g-color-swatch\")[3],$paletteColor.baseColorSwatch,\"Base color swatch should be the middle one\")\n    }\n  )\n  test(\"values are derived based on a linear percentage\",\n    ({ $paletteColor }) => {\n\n      $paletteColor.setAttribute(\"scale-algorithm\", \"linear\")\n\n      const swatches = Array.from($paletteColor.querySelectorAll(\"g-color-swatch\"))\n\n      const base = swatches[3]\n\n      swatches.forEach( (swatch,index) => {\n        if (index == 3) {\n          return;\n        }\n        assertEqual(base.id,swatch.getAttribute(\"derived-from\"),`Swatch ${index} should be derived-from the base (${base.id})`)\n        assertEqual(\"brightness\",swatch.getAttribute(\"derivation-algorithm\",\"brightness\"), `Swatch ${index} should use the brightness algorithm`)\n      })\n\n      assertEqual(\"80%\",swatches[0].getAttribute(\"darken-by\"), \"Swatches earlier in scale should have darker colors\")\n      assertEqual(\"60%\",swatches[1].getAttribute(\"darken-by\"), \"Swatches earlier in scale should have darker colors\")\n      assertEqual(\"40%\",swatches[2].getAttribute(\"darken-by\"), \"Swatches earlier in scale should have darker colors\")\n      assertEqual(\"30%\",swatches[4].getAttribute(\"brighten-by\"), \"Swatches later in scale should have brighter colors\")\n      assertEqual(\"60%\",swatches[5].getAttribute(\"brighten-by\"), \"Swatches later in scale should have brighter colors\")\n      assertEqual(\"90%\",swatches[6].getAttribute(\"brighten-by\"), \"Swatches later in scale should have brighter colors\")\n      assertEqual($paletteColor.querySelectorAll(\"g-color-swatch\")[3],$paletteColor.baseColorSwatch,\"The base swatch should be the middle one\")\n    }\n  )\n\n  test(\"The preview event is fired when the preview button is clicked and includes the relevant info\",\n    ({$paletteColor,$previewButton}) => {\n      let previewCalled = false\n      let detail = null\n\n      $paletteColor.addEventListener(\"preview-scale\", (event) => {\n        previewCalled = true \n        detail = event.detail\n      })\n      $previewButton.dispatchEvent(new Event(\"click\"))\n\n      assert(previewCalled,\"The event listener should've been called when the button was clicked\")\n      assertEqual($paletteColor.colorName,detail.colorName, \"details should have the color name\")\n      assertEqual($paletteColor.colorNameUserOverride,detail.colorNameUserOverride,\"details should have the override flag\")\n      assert(7,detail.colorScale.length,\"details should have the same # of colors in the scale\")\n      $paletteColor.colorScale.forEach( (hexCode,index) => {\n        assertEqual(hexCode,detail.colorScale[index],`Index ${index} should match the component`)\n      })\n      assertEqual($paletteColor.baseColorSwatch.hexCode,detail.baseColor,\"Base color should be explicitly called out\")\n\n    }\n  )\n})\n\ntestCase(\"derive-color-scale-exp\", ({setup,teardown,confidenceCheck,test,subject,assert,assertEqual}) => {\n  setup(setupBasedOnFirstChild)\n  teardown(teardownAdded)\n  confidenceCheck( ({$paletteColor}) => {\n    const numSwatches = $paletteColor.querySelectorAll(\"g-color-swatch\").length\n    if (numSwatches != 7) {\n      throw `Test setup is borked - there are ${numSwatches} swatches and not 5`\n    }\n  })\n\n  test(\"derivations and configuration are set automatically on swatches based on an exponential progression\",\n    ({ $paletteColor }) => {\n      const swatches = Array.from($paletteColor.querySelectorAll(\"g-color-swatch\"))\n\n      const base = swatches[3]\n\n\n      // Trigger everything\n      $paletteColor.setAttribute(\"scale-algorithm\",\"exponential\")\n\n      assert(base.id,`Base swatch should have been given an ID: ${base.outerHTML}`)\n      assertEqual(1,document.querySelectorAll(`#${base.id}`).length,\"The assigned ID should be unique\")\n\n      swatches.forEach( (swatch,index) => {\n        if (index == 3) {\n          return;\n        }\n        assertEqual(base.id,swatch.getAttribute(\"derived-from\"),`Swatch ${index} should be derived-from the base (${base.id})`)\n        assertEqual(\"brightness\",swatch.getAttribute(\"derivation-algorithm\",\"brightness\"), `Swatch ${index} should use the brightness algorithm`)\n      })\n\n      assertEqual(\"88%\",swatches[0].getAttribute(\"darken-by\"), \"Swatches earlier in scale should have darker colors\")\n      assertEqual(\"64%\",swatches[1].getAttribute(\"darken-by\"), \"Swatches earlier in scale should have darker colors\")\n      assertEqual(\"35%\",swatches[2].getAttribute(\"darken-by\"), \"Swatches earlier in scale should have darker colors\")\n      assertEqual(\"49%\",swatches[4].getAttribute(\"brighten-by\"), \"Swatches later in scale should have brighter colors\")\n      assertEqual(\"87%\",swatches[5].getAttribute(\"brighten-by\"), \"Swatches later in scale should have brighter colors\")\n      assertEqual(\"96%\",swatches[6].getAttribute(\"brighten-by\"), \"Swatches later in scale should have brighter colors\")\n      assertEqual($paletteColor.querySelectorAll(\"g-color-swatch\")[3],$paletteColor.baseColorSwatch,\"The base swatch should be the middle one\")\n    }\n  )\n})\n\ntestCase(\"linked-to-primary\", ({setup,teardown,test,confidenceCheck,subject,assert,assertEqual}) => {\n  setup( (...args) => {\n    const locatePaletteColor = ({subject,clone}) => {\n      return clone(subject.querySelector(\"g-palette-color-scale[linked-to-primary]\"),\"g-palette-color-scale[linked-to-primary]\",subject)\n    }\n    return basicSetup(locatePaletteColor)(...args)\n  })\n  setup( ({subject,container,clone,$paletteColor}) => {\n    const $primary = clone(subject.querySelector(\"g-palette-color-scale[primary]\"))\n    $primary.id = `test-case-primary-${crypto.randomUUID()}`\n    container.appendChild($primary)\n    // Force the relinking behavior\n    $paletteColor.removeAttribute(\"linked-to-primary\")\n    $paletteColor.setAttribute(\"linked-to-primary\",\"complement\")\n    return {$primary}\n  })\n  confidenceCheck(({$primary,$paletteColor}) => {\n    assert($primary.baseColorSwatch,\"the linked-to-primary g-color-scale should've had a baseColorSwatch\")\n    assert($paletteColor.baseColorSwatch.querySelectorAll(\"input[type=color]\").length > 0,\"there should be at least one color input on our base color\")\n  })\n\n  teardown(teardownAdded)\n\n  test(\"the base color is linked to the primary using the value for linked-to-primary\",\n    ({ $paletteColor,$primary }) => {\n      assertEqual($primary.baseColorSwatch.id,$paletteColor.baseColorSwatch.getAttribute(\"derived-from\"),`Expected our base color's derived-from to have been set to the primary's base color: primary ${$primary.baseColorSwatch.outerHTML}\\nus: ${$paletteColor.baseColorSwatch.outerHTML}`)\n      assertEqual($paletteColor.getAttribute(\"linked-to-primary\"),$paletteColor.baseColorSwatch.getAttribute(\"derivation-algorithm\"))\n    }\n  )\n\n  test(\"all buttons are enabled\",\n    ({ $paletteColor, $previewButton, $unlinkButton, $removeButton }) => {\n\n      assert(!$previewButton.getAttribute(\"disabled\"), \"Expected preview button to be enabled\")\n      assert(!$unlinkButton.getAttribute(\"disabled\"), \"Expected unlink button to be enabled\")\n      assert(!$removeButton.getAttribute(\"disabled\"), \"Expected remove button to be enabled\")\n    }\n  )\n\n  test(\"The preview event is fired when the preview button is clicked\",\n    ({$paletteColor,$previewButton}) => {\n      let previewCalled = false\n      $paletteColor.addEventListener(\"preview-scale\", (event) => previewCalled = true )\n      $previewButton.dispatchEvent(new Event(\"click\"))\n\n      assert(previewCalled,\"The event listener should've been called when the button was clicked\")\n    }\n  )\n  test(\"The remove event is fired after the element is removed, when the remove button is clicked\",\n    ({$paletteColor,$removeButton}) => {\n      let eventReceived = false\n      let childExists = null\n      const parent = $paletteColor.parentElement\n      const id = $paletteColor.id\n\n      $paletteColor.addEventListener(\"remove-scale\", (event) => {\n        eventReceived = true \n        childExists = !!parent.children.namedItem(id)\n      })\n      $removeButton.dispatchEvent(new Event(\"click\"))\n\n      assert(eventReceived,\"The event listener should've been called when the button was clicked\")\n      assert(!childExists,\"Removal should've been called before the event handler\")\n      assert(!parent.children.namedItem(id),\"The element should've been removed\")\n    }\n  )\n  test(\"The unlink event is fired when unlink is clicked and the derivation attributes from the base swatch are removed, but it's hex-code is preserved and any inputs inside are made editable\",\n    ({$paletteColor,$unlinkButton,$primary}) => {\n      let eventReceived = null\n      let stillLinkedToPrimary = null\n      $paletteColor.addEventListener(\"unlink-from-primary\", (event) => {\n        eventReceived = true\n        stillLinkedToPrimary = $paletteColor.getAttributeNames().indexOf(\"linked-to-primary\") != -1\n      })\n      $unlinkButton.dispatchEvent(new Event(\"click\"))\n\n      assert(eventReceived,\"The event listener should've been called when the button was clicked\")\n      assert(!stillLinkedToPrimary,\"Unlinking should've occured before the handler was called\")\n      assert($paletteColor.getAttributeNames().indexOf(\"linked-to-primary\") == -1,\"linked-to-primary attribute should've been removed\")\n      assert($paletteColor.baseColorSwatch.getAttributeNames().indexOf(\"derived-from\") == -1,\"derived-from should've been removed\")\n      assert($paletteColor.baseColorSwatch.getAttributeNames().indexOf(\"derivation-algorithm\") == -1,\"derivation-algorithm should've been removed\")\n      assertEqual(\"#82BD29\",$paletteColor.baseColorSwatch.getAttribute(\"hex-code\"),\"hex-code shoud've been set on the base color\")\n      $paletteColor.baseColorSwatch.querySelectorAll(\"input[type=color]\").forEach( (input) => {\n        assert(input.getAttributeNames().indexOf(\"disabled\") == -1,`Input should not have disabled set: ${input.outerHTML}`)\n      })\n\n      $primary.baseColorSwatch.querySelector(\"input[type=color]\").value = \"#111111\"\n      $primary.baseColorSwatch.querySelector(\"input[type=color]\").dispatchEvent(new Event(\"change\"))\n      assertEqual(\"#82BD29\",$paletteColor.baseColorSwatch.getAttribute(\"hex-code\"),\"hex-code shoud've been set on the base color\")\n      assertEqual(\"#82bd29\",$paletteColor.baseColorSwatch.querySelector(\"input[type=color]\").value,\"input value shoud've been set on the base color\")\n    }\n  )\n})\n\ntestCase(\"unlinked-color\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup(setupBasedOnFirstChild)\n  teardown(teardownAdded)\n\n  test(\"preview and remove are enabled, but unlink id not\",\n    ({ $paletteColor, $previewButton, $unlinkButton, $removeButton }) => {\n\n      assert(!$previewButton.getAttribute(\"disabled\"), \"Expected preview button to be enabled\")\n      assert( $unlinkButton.getAttribute(\"disabled\"), \"Expected unlink button to be disabled\")\n      assert(!$removeButton.getAttribute(\"disabled\"), \"Expected remove button to be enabled\")\n    }\n  )\n\n  test(\"The preview event is fired when the preview button is clicked\",\n    ({$paletteColor,$previewButton}) => {\n      let previewCalled = false\n      $paletteColor.addEventListener(\"preview-scale\", (event) => previewCalled = true )\n      $previewButton.dispatchEvent(new Event(\"click\"))\n\n      assert(previewCalled,\"The event listener should've been called when the button was clicked\")\n    }\n  )\n  test(\"The remove event is fired and the element is removed when the remove button is clicked\",\n    ({$paletteColor,$removeButton}) => {\n      let removeCalled = false\n      const parent = $paletteColor.parentElement\n      const id = $paletteColor.id\n      $paletteColor.addEventListener(\"remove-scale\", (event) => removeCalled = true )\n      $removeButton.dispatchEvent(new Event(\"click\"))\n\n      assert(removeCalled,\"The event listener should've been called when the button was clicked\")\n      assert(!parent.children.namedItem(id),\"The element should've been removed\")\n    }\n  )\n})\n\ntestCase(\"color-changed-event\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup(setupBasedOnFirstChild)\n  teardown(teardownAdded)\n\n  test(\"when the base color is changed, an event id fired\",\n    ({ $paletteColor }) => {\n      let receivedEvent = null\n      $paletteColor.addEventListener(\"base-color-changed\", (event) => {\n        receivedEvent = event\n      })\n\n      $paletteColor.baseColorSwatch.forTesting.dispatchHexCodeChanged()\n\n      assert(receivedEvent,\"Event should've been fired\")\n      assert(receivedEvent.bubbles,\"Event should bubble\")\n\n    }\n  )\n})\n", "import {\n  testCase,\n} from \"../brutaldom/testing\"\n\nconst basicSetup = ({require,subject,clone}) => {\n  const $component = clone(subject.children[0],\"first child\")\n  const $button = require($component.querySelector(\"button\"))\n  const $palette = clone(subject.children[1],\"second child\")\n\n  $palette.id = `test-case-${$palette.id}`\n  $component.setAttribute(\"palette\", $palette.id)\n  $palette.querySelectorAll(\"g-color-swatch\").forEach( (swatch) => {\n    if (swatch.id) {\n      swatch.id = `${palette.id}-${swatch.id}`\n    }\n  })\n  $palette.querySelectorAll(\"g-color-name\").forEach( (colorName) => {\n    const colorSwatchId = colorName.getAttribute(\"color-swatch\")\n    if (colorSwatchId) {\n      colorName.setAttribute(\"color-swatch\",`${palette.id}-${colorSwatchId}`)\n    }\n  })\n\n  document.body.appendChild($palette)\n  document.body.appendChild($component)\n\n  return { $component, $button, $palette }\n}\n\nconst basicTeardown = ({$component, $palette}) => {\n  document.body.removeChild($component)\n  document.body.removeChild($palette)\n}\n\nconst assertNewScale = (newScale,{ linkedToPrimary }) => {\n  assert(newScale.baseColorSwatch.id,\"Base color swatch must have an id\")\n  assertEqual(1,document.querySelectorAll(`[id=${newScale.baseColorSwatch.id}]`).length,`Base color swatch's ID ${newScale.baseColorSwatch.id} must be unique`)\n\n  if (linkedToPrimary) {\n    assertEqual(linkedToPrimary,newScale.getAttribute(\"linked-to-primary\"),`New scale should be linked to primary as ${linkedToPrimary}`)\n    const numInputs = newScale.baseColorSwatch.querySelectorAll(\"input[type=color]\").length\n    const numDisabledInputs = newScale.baseColorSwatch.querySelectorAll(\"input[type=color][disabled]\").length\n    assertEqual(numInputs,numDisabledInputs,\"When linking, any inputs on the base color should be disabled\")\n  }\n  else {\n    assert(!newScale.getAttribute(\"linked-to-primary\"),\"New scale should not be linked to primary\")\n  }\n  assertEqual(\"exponential\",newScale.getAttribute(\"scale-algorithm\"),\"New scale should use the primariy's algorithm\")\n\n  const colorName = newScale.querySelector(\"g-color-name\")\n\n  assertEqual(newScale.baseColorSwatch.id,\n              colorName.getAttribute(\"color-swatch\"),\n              \"Color name component should be linked to this new scale's base swatch\")\n\n  newScale.swatches.forEach( (swatch) => {\n    if (swatch != newScale.baseColorSwatch) {\n      assertEqual(swatch.getAttribute(\"derived-from\"),newScale.baseColorSwatch.id,\"New swatches should be derived from the base\")\n      assertEqual(swatch.getAttribute(\"derivation-algorithm\"),\"brightness\",\"New swatches should be derived vai brightness\")\n    }\n  })\n}\n\ntestCase(\"add-color-scale-random\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup(basicSetup)\n  teardown(basicTeardown)\n\n  test(\"clicking the button adds a random color to the palette\",\n    ({$button,$palette}) => {\n      $button.dispatchEvent(new Event(\"click\", { cancelable: true, bubbles: true }))\n\n      const scales = $palette.querySelectorAll(\"g-palette-color-scale\")\n      assertEqual(3,scales.length)\n\n      const newScale = scales[2]\n      assertNewScale(scales[2], { linkedToPrimary: false })\n\n    }\n  )\n  test(\"clicking the button twice adds two random colors to the palette\",\n    ({$button,$palette}) => {\n      $button.dispatchEvent(new Event(\"click\", { cancelable: true, bubbles: true }))\n      $button.dispatchEvent(new Event(\"click\", { cancelable: true, bubbles: true }))\n\n      const scales = $palette.querySelectorAll(\"g-palette-color-scale\")\n      assertEqual(4,scales.length)\n\n      const newScale1 = scales[2]\n      const newScale2 = scales[3]\n      assertNewScale(scales[2], { linkedToPrimary: false })\n      assertNewScale(scales[3], { linkedToPrimary: false })\n    }\n  )\n})\n\ntestCase(\"add-color-scale-complement\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup(basicSetup)\n  teardown(basicTeardown)\n\n  test(\"clicking the button adds a new scale linked as a complement to the primary\",\n    ({$button,$palette}) => {\n      $button.dispatchEvent(new Event(\"click\", { cancelable: true, bubbles: true }))\n\n      const scales = $palette.querySelectorAll(\"g-palette-color-scale\")\n      assertEqual(2,scales.length)\n\n      assertNewScale(scales[1], { linkedToPrimary: \"complement\" })\n    }\n  )\n\n  test(\"clicking the button twice doesn't add a second scale linked as a complement to the primary\",\n    ({$button,$palette}) => {\n      $button.dispatchEvent(new Event(\"click\", { cancelable: true, bubbles: true }))\n      $button.dispatchEvent(new Event(\"click\", { cancelable: true, bubbles: true }))\n\n      const scales = $palette.querySelectorAll(\"g-palette-color-scale\")\n      assertEqual(2,scales.length)\n\n      assertNewScale(scales[1], { linkedToPrimary: \"complement\" })\n    }\n  )\n})\n\nconst algorithms = [\n  \"split-complement\",\n  \"analogous\",\n  \"triad\",\n]\n\nalgorithms.forEach( (algorithm) => {\n  testCase(`add-color-scale-${algorithm}`, ({setup,teardown,test,subject,assert,assertEqual}) => {\n    setup(basicSetup)\n    teardown(basicTeardown)\n\n    test(`clicking the button adds two new scales linked as ${algorithm}-upper and ${algorithm}-lower to the primary`,\n      ({$button,$palette}) => {\n        $button.dispatchEvent(new Event(`click`, { cancelable: true, bubbles: true }))\n\n        const scales = $palette.querySelectorAll(`g-palette-color-scale`)\n        assertEqual(3,scales.length)\n\n        assertNewScale(scales[1], { linkedToPrimary: `${algorithm}-lower` })\n        assertNewScale(scales[2], { linkedToPrimary: `${algorithm}-upper` })\n      }\n    )\n\n    test(`clicking the button twice doesn't add second scales`,\n      ({$button,$palette}) => {\n        $button.dispatchEvent(new Event(`click`, { cancelable: true, bubbles: true }))\n        $button.dispatchEvent(new Event(`click`, { cancelable: true, bubbles: true }))\n\n        const scales = $palette.querySelectorAll(`g-palette-color-scale`)\n        assertEqual(3,scales.length)\n\n        assertNewScale(scales[1], { linkedToPrimary: `${algorithm}-lower` })\n        assertNewScale(scales[2], { linkedToPrimary: `${algorithm}-upper` })\n      }\n    )\n\n    test(`if there is already a lower, it will only add the upper`,\n      ({$button,$palette}) => {\n        $button.dispatchEvent(new Event(`click`, { cancelable: true, bubbles: true }))\n\n        let scales = $palette.querySelectorAll(`g-palette-color-scale`)\n        assertEqual(3,scales.length)\n\n        scales[2].removeAttribute(`linked-to-primary`)\n        $button.dispatchEvent(new Event(`click`, { cancelable: true, bubbles: true }))\n\n        scales = $palette.querySelectorAll(`g-palette-color-scale`)\n        assertEqual(4,scales.length)\n\n        assertNewScale(scales[1], { linkedToPrimary: `${algorithm}-lower` })\n        assertNewScale(scales[2], { linkedToPrimary: false })\n        assertNewScale(scales[3], { linkedToPrimary: `${algorithm}-upper` })\n      }\n    )\n  })\n})\n", "import {\n  testCase,\n} from \"../brutaldom/testing\"\n\nconst basicSetup = ({require,clone,subject}) => {\n\n  const $palette = clone(subject.children[0],\"first child\")\n\n  const $primary  = require($palette.children[0],\"first child of palette\")\n  const $linked   = require($palette.children[1],\"second child of palette\")\n  const $unlinked = require($palette.children[2],\"third child of palette\")\n\n  $palette.id                  = `test-case-${$palette.id}`\n  $primary.baseColorSwatch.id  = `test-case-${$primary.baseColorSwatch.id}`\n  $linked.baseColorSwatch.id   = `test-case-${$linked.baseColorSwatch.id}`\n  $unlinked.baseColorSwatch.id = `test-case-${$unlinked.baseColorSwatch.id}`\n\n  $primary.querySelector(\"g-color-name\").setAttribute(\"color-swatch\",$primary.baseColorSwatch.id)\n  $linked.querySelector(\"g-color-name\").setAttribute(\"color-swatch\",$linked.baseColorSwatch.id)\n  $unlinked.querySelector(\"g-color-name\").setAttribute(\"color-swatch\",$unlinked.baseColorSwatch.id)\n\n  document.body.appendChild($palette)\n\n  return { $palette, $primary, $linked, $unlinked }\n}\n\nconst basicTeardown = ({$palette}) => {\n  document.body.removeChild($palette)\n}\n\ntestCase(\"palette-events\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup(basicSetup)\n  teardown(basicTeardown)\n\n  test(\"changing primary color sends a palette-change event\",\n    ({$palette,$primary}) => {\n      let receivedEvent\n      $palette.addEventListener(\"palette-change\", (event) => {\n        receivedEvent = event\n      })\n      const input = $primary.querySelector(\"input[type=color]\")\n      input.value = \"#991234\"\n      input.dispatchEvent(new Event(\"change\", { cancelable: true, bubbles: true }))\n      assert(receivedEvent,\"Expected the palette-change event to have been triggered\")\n    }\n  )\n  test(\"changing unlinked color sends a palette-change event\",\n    ({$palette,$unlinked}) => {\n      let receivedEvent\n      $palette.addEventListener(\"palette-change\", (event) => {\n        receivedEvent = event\n      })\n      const input = $unlinked.querySelector(\"input[type=color]\")\n      input.value = \"#991234\"\n      input.dispatchEvent(new Event(\"change\", { cancelable: true, bubbles: true }))\n      assert(receivedEvent,\"Expected the palette-change event to have been triggered\")\n    }\n  )\n  test(\"adding a linked color sends a palette-change event\",\n    ({$palette}) => {\n      let receivedEvent\n      $palette.addEventListener(\"palette-change\", (event) => {\n        receivedEvent = event\n      })\n      $palette.addScale({linkAlgorithm: \"split-complement-upper\"})\n      assert(receivedEvent,\"Expected the palette-change event to have been triggered\")\n    }\n  )\n  test(\"adding an unlinked color sends a palette-change event\",\n    ({$palette}) => {\n      let receivedEvent\n      $palette.addEventListener(\"palette-change\", (event) => {\n        receivedEvent = event\n      })\n      $palette.addScale({hexCode: \"#998812\"})\n      assert(receivedEvent,\"Expected the palette-change event to have been triggered\")\n    }\n  )\n  test(\"removing a color sends a palette-change event\",\n    ({$palette}) => {\n      let receivedEvent\n      $palette.addEventListener(\"palette-change\", (event) => {\n        receivedEvent = event\n      })\n\n      const button = $palette.querySelectorAll(\"button[data-remove]\")[1]\n      button.dispatchEvent(new Event(\"click\", { cancelable: true, bubbles: true }))\n      assert(receivedEvent,\"Expected the palette-change event to have been triggered\")\n    }\n  )\n  test(\"unlinking a color sends a palette-change event\",\n    ({$palette}) => {\n      let receivedEvent\n      $palette.addEventListener(\"palette-change\", (event) => {\n        receivedEvent = event\n      })\n\n      const button = $palette.querySelectorAll(\"button[data-unlink]\")[1]\n      button.dispatchEvent(new Event(\"click\", { cancelable: true, bubbles: true }))\n      assert(receivedEvent,\"Expected the palette-change event to have been triggered\")\n    }\n  )\n\n  test(\"renaming a color sends a palette-change\",\n    ({$palette}) => {\n      let receivedEvent\n      $palette.addEventListener(\"palette-change\", (event) => {\n        receivedEvent = event\n      })\n\n      const colorNameInputs = $palette.querySelectorAll(\"g-color-name input\")\n      const randomIndex = Math.floor(Math.random() * colorNameInputs.length)\n      const input = colorNameInputs[randomIndex]\n\n      input.value = \"Bleorgh\"\n      input.dispatchEvent(new Event(\"change\", { cancelable: true, bubbles: true }))\n      assert(receivedEvent,`Expected the palette-change event to have been triggered from ${randomIndex}`)\n    }\n  )\n\n  test(\"the palette's primary color info can be accessed when a name is not overridden\",\n    ({$palette}) => {\n      assertEqual(\"#600080\",$palette.primaryColor.hexCode)\n      assertEqual(\"Purple\",$palette.primaryColor.colorName)\n      assert(!$palette.primaryColor.colorNameUserOverride)\n    }\n  )\n\n  test(\"the palette's primary color info can be accessed when a name is overridden\",\n    ({$palette}) => {\n      $palette.querySelector(\"g-color-name\").overrideColorName(\"Foo\")\n      assertEqual(\"#600080\",$palette.primaryColor.hexCode)\n      assertEqual(\"Foo\",$palette.primaryColor.colorName)\n      assert($palette.primaryColor.colorNameUserOverride)\n    }\n  )\n  test(\"the palette's non-primary colors' info can be accessed when a name is not overridden\",\n    ({$palette}) => {\n      const otherColors = $palette.otherColors\n      assertEqual(2,otherColors.length,\"There should be two other colors\")\n\n      assertEqual(\"complement\",otherColors[0].algorithm)\n      assertEqual(\"Green\",otherColors[0].colorName)\n      assert(!otherColors[0].colorNameUserOverride,\"color name should not be overridden\")\n\n      assertEqual(\"#881123\",otherColors[1].hexCode)\n      assertEqual(\"Red\",otherColors[1].colorName)\n      assert(!otherColors[1].colorNameUserOverride,\"color name should not be overridden\")\n    }\n  )\n\n  test(\"the palette's non-primary colors' info can be accessed when a name is overridden\",\n    ({$palette}) => {\n      $palette.querySelectorAll(\"g-color-name\").forEach( (element,index) => {\n        element.overrideColorName(`Foo ${index}`)\n      })\n      const otherColors = $palette.otherColors\n      assertEqual(2,otherColors.length,\"There should be two other colors\")\n\n      assertEqual(\"complement\",otherColors[0].algorithm)\n      assertEqual(\"Foo 1\",otherColors[0].colorName)\n      assert(otherColors[0].colorNameUserOverride,\"color name should be overridden\")\n\n      assertEqual(\"#881123\",otherColors[1].hexCode)\n      assertEqual(\"Foo 2\",otherColors[1].colorName)\n      assert(otherColors[1].colorNameUserOverride,\"color name should be overridden\")\n    }\n  )\n\n})\n", "import {\n  testCase,\n} from \"../brutaldom/testing\"\n\ntestCase(\"preview-text-colors\", ({setup,teardown,test,subject,assert,assertEqual}) => {\n  setup( ({subject,require,clone}) => {\n    const $previewText = clone(subject.children[0],\"child\")\n    document.body.appendChild($previewText)\n    return ({$previewText})\n  })\n  teardown( ({$previewText}) => {\n    document.body.removeChild($previewText)\n  })\n\n  test(\"the attributes flow to the styles\",\n    ({$previewText}) => {\n      assertEqual(\"rgb(0, 0, 0)\",$previewText.style.backgroundColor)\n      assertEqual(\"rgb(255, 255, 255)\",$previewText.style.color)\n    }\n  )\n  test(\"removing the attributes sets reasonable defaults\",\n    ({$previewText}) => {\n      $previewText.removeAttribute(\"background-color\")\n      $previewText.removeAttribute(\"text-color\")\n      assertEqual(\"transparent\",$previewText.style.backgroundColor)\n      assertEqual(\"currentcolor\",$previewText.style.color)\n    }\n  )\n\n})\n", "import TestCaseComponent from \"./brutaldom/testing/TestCaseComponent\"\nimport \"./components/ColorSwatchComponent.tests.js\"\nimport \"./components/ColorNameComponent.tests.js\"\nimport \"./components/PaletteColorScaleComponent.tests.js\"\nimport \"./components/AddColorScaleButtonComponent.tests.js\"\nimport \"./components/PaletteComponent.tests.js\"\nimport \"./components/PreviewTextComponent.tests.js\"\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  TestCaseComponent.define()\n})\n"],
  "mappings": "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",
  "names": ["require_color_name", "__commonJSMin", "exports", "module", "require_conversions", "__commonJSMin", "exports", "module", "cssKeywords", "reverseKeywords", "key", "convert", "model", "channels", "labels", "rgb", "r", "g", "b", "min", "max", "delta", "h", "s", "l", "rdif", "gdif", "bdif", "v", "diff", "diffc", "__name", "c", "w", "k", "m", "y", "comparativeDistance", "x", "reversed", "currentClosestDistance", "currentClosestKeyword", "keyword", "value", "distance", "z", "xyz", "a", "hsl", "t2", "t3", "val", "t1", "i", "smin", "lmin", "sv", "hsv", "hi", "f", "p", "q", "t", "vmin", "sl", "hwb", "wh", "bl", "ratio", "n", "cmyk", "lab", "y2", "x2", "z2", "lch", "hr", "args", "saturation", "ansi", "color", "mult", "rem", "string", "match", "colorString", "char", "integer", "chroma", "grayscale", "hue", "hcg", "pure", "mg", "apple", "gray", "require_route", "__commonJSMin", "exports", "module", "conversions", "buildGraph", "graph", "models", "len", "i", "__name", "deriveBFS", "fromModel", "queue", "current", "adjacents", "adjacent", "node", "link", "from", "to", "args", "wrapConversion", "toModel", "path", "fn", "cur", "conversion", "require_color_convert", "__commonJSMin", "exports", "module", "conversions", "route", "convert", "models", "wrapRaw", "fn", "wrappedFn", "__name", "args", "arg0", "wrapRounded", "result", "len", "fromModel", "routes", "toModel", "testCases_default", "TestFailure", "__name", "ConfidenceCheckFailed", "__name", "TestResult", "__name", "test", "numAssertions", "errorOrFailure", "errorOrFailureContext", "TestFailure", "ConfidenceCheckFailed", "TestCaseComponent", "_TestCaseComponent", "__name", "testCaseId", "subject", "testCase", "testCases_default", "TestResult", "name", "oldValue", "newValue", "details", "$p", "description", "formattedResults", "result", "numAssertions", "errorMessage", "error", "TypeOf", "_TypeOf", "__name", "value", "error", "TypeOf_default", "Test", "__name", "description", "testCode", "assert_default", "__name", "expr", "context", "TestFailure", "assertNotEqual_default", "__name", "expected", "got", "context", "message", "TestFailure", "assertEqual_default", "__name", "expected", "got", "context", "message", "TypeOf_default", "TestFailure", "TestCase", "__name", "id", "testCaseCode", "subject", "setups", "teardowns", "confidenceChecks", "captureSetup", "f", "captureTeardown", "captureConfidenceCheck", "tests", "captureTest", "description", "Test", "assertionsThisTest", "capturingAssert", "args", "assert_default", "assertEqual_default", "assertNotEqual_default", "results", "require", "element", "elementSearched", "clone", "cloned", "test", "setupResults", "setup", "confidenceCheck", "e", "ConfidenceCheckFailed", "TestResult", "teardown", "testCase", "__name", "id", "testCaseCode", "testCases_default", "TestCase", "import_color_convert", "NotValidHexCode", "__name", "hexCodeValue", "Color", "_Color", "__name", "hexCode", "onError", "e", "h", "s", "l", "colorConvert", "r", "g", "b", "hexCodeAsString", "matches", "NotValidHexCode", "_matches", "_hash", "r8Bit", "g8Bit", "b8Bit", "rsRGB", "gsRGB", "bsRGB", "otherColor", "l1", "l2", "swap", "Color_default", "singleDerivedSetup", "__name", "subject", "clone", "require", "$derived", "$main", "$derivedInput", "$derivedLabel", "$derivedLinkContext", "singleDerivedTeardown", "testCase", "setup", "teardown", "test", "assert", "assertEqual", "confidenceCheck", "lowerUpperSetup", "$lower", "$upper", "$lowerInput", "$lowerLabel", "$lowerLinkContext", "$upperInput", "$upperLabel", "$upperLinkContext", "lowerUpperTeardown", "component", "$input", "$label", "$linkContext", "hexCode", "value", "$code", "$color", "$hexcode", "_", "r", "g", "b", "valueAsHex", "Color_default", "assertNotEqual", "$inputs", "$otherInputs", "$labels", "otherInputIds", "element", "input", "label", "Logger", "__name", "stringOrFalse", "PrefixedLogger", "BufferedLogger", "args", "prefixOrTrue", "bufferedLogger", "level", "message", "Logger_default", "RichString", "_RichString", "__name", "possiblyDefinedStringOrRichString", "string", "_", "x", "spacer", "replacement", "decamelized", "BaseCustomElement", "__name", "Logger_default", "oldValue", "newValue", "oldLogger", "prefix", "name", "callbackName", "RichString", "BaseDerivation", "__name", "hexCode", "Color_default", "h", "s", "l", "BrightnessDerivation", "BaseDerivation", "__name", "hexCode", "options", "darken", "h", "s", "l", "distance", "percent", "decrease", "newL", "brighten", "increase", "ComplementaryDerivation", "BaseDerivation", "__name", "hexCode", "options", "h", "s", "l", "newH", "AnalogousUpperDerivation", "BaseDerivation", "__name", "hexCode", "options", "h", "s", "l", "newH", "AnalogousLowerDerivation", "SplitComplementaryUpperDerivation", "BaseDerivation", "__name", "ComplementaryDerivation", "AnalogousUpperDerivation", "hexCode", "options", "SplitComplementaryLowerDerivation", "AnalogousLowerDerivation", "TriadUpperDerivation", "BaseDerivation", "__name", "hexCode", "options", "h", "s", "l", "newH", "TriadLowerDerivation", "DerivationAlgorithm", "_DerivationAlgorithm", "__name", "string", "throwOnUnknown", "BrightnessDerivation", "ComplementaryDerivation", "SplitComplementaryLowerDerivation", "SplitComplementaryUpperDerivation", "AnalogousLowerDerivation", "AnalogousUpperDerivation", "TriadLowerDerivation", "TriadUpperDerivation", "ColorSwatchComponent", "BaseCustomElement", "__name", "event", "DerivationAlgorithm", "newValue", "f", "elements", "label", "input", "code", "hexCode", "numInputs", "element", "codeElement", "darken", "brighten", "whenHexCodeExists", "derivedFromElement", "hexCodeExists", "ColorNameComponent", "BaseCustomElement", "__name", "event", "value", "newValue", "component", "inputs", "input", "newName", "hexCode", "hue", "saturation", "l", "Color_default", "nameEntry", "name", "low", "high", "basicSetup", "__name", "require", "clone", "subject", "$colorName", "ColorNameComponent", "$swatch", "ColorSwatchComponent", "$input", "basicTeardown", "testCase", "setup", "teardown", "test", "assert", "assertEqual", "eventReceived", "event", "override", "basicSetup", "__name", "locatePaletteColor", "subject", "require", "clone", "$paletteColor", "$previewButton", "$unlinkButton", "$removeButton", "uniqueId", "container", "e", "setupBasedOnFirstChild", "teardownAdded", "testCase", "setup", "teardown", "test", "assert", "assertEqual", "swatches", "base", "swatch", "index", "previewCalled", "detail", "event", "hexCode", "confidenceCheck", "numSwatches", "args", "$primary", "eventReceived", "childExists", "parent", "id", "stillLinkedToPrimary", "input", "removeCalled", "receivedEvent", "basicSetup", "__name", "require", "subject", "clone", "$component", "$button", "$palette", "swatch", "colorName", "colorSwatchId", "basicTeardown", "assertNewScale", "newScale", "linkedToPrimary", "numInputs", "numDisabledInputs", "testCase", "setup", "teardown", "test", "assert", "assertEqual", "scales", "newScale1", "newScale2", "algorithms", "algorithm", "basicSetup", "__name", "require", "clone", "subject", "$palette", "$primary", "$linked", "$unlinked", "basicTeardown", "testCase", "setup", "teardown", "test", "assert", "assertEqual", "receivedEvent", "event", "input", "colorNameInputs", "randomIndex", "otherColors", "element", "index", "testCase", "setup", "teardown", "test", "subject", "assert", "assertEqual", "require", "clone", "$previewText", "TestCaseComponent"]
}
